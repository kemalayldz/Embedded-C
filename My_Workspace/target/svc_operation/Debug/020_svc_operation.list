
020_svc_operation.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012d0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000cc  08001480  08001480  00011480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800154c  0800154c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800154c  0800154c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800154c  0800154c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800154c  0800154c  0001154c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001550  08001550  00011550  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001554  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  080015b8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  080015b8  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000231a  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000062f  00000000  00000000  000223ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  000229e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  00022b28  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002af7  00000000  00000000  00022c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000127f  00000000  00000000  0002572f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009183  00000000  00000000  000269ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fb31  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b90  00000000  00000000  0002fbac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001468 	.word	0x08001468

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001468 	.word	0x08001468

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <add_operator>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


int32_t add_operator(int32_t x, int32_t y){
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

	int32_t res;
	__asm volatile("SVC #36");
 800029a:	df24      	svc	36	; 0x24
	__asm volatile("MOV R0, %0"  : "=r" (res) :);
 800029c:	4618      	mov	r0, r3
 800029e:	60fb      	str	r3, [r7, #12]
	return res;
 80002a0:	68fb      	ldr	r3, [r7, #12]
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3714      	adds	r7, #20
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr
	...

080002b0 <main>:
	__asm volatile("MOV R0, %0"  : "=r" (res) :);
	return res;
}

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	int32_t res = add_operator(20,30);
 80002b6:	211e      	movs	r1, #30
 80002b8:	2014      	movs	r0, #20
 80002ba:	f7ff ffe9 	bl	8000290 <add_operator>
 80002be:	6078      	str	r0, [r7, #4]
	printf("Result: %ld", res);
 80002c0:	6879      	ldr	r1, [r7, #4]
 80002c2:	4804      	ldr	r0, [pc, #16]	; (80002d4 <main+0x24>)
 80002c4:	f000 f988 	bl	80005d8 <iprintf>
 80002c8:	2300      	movs	r3, #0

}
 80002ca:	4618      	mov	r0, r3
 80002cc:	3708      	adds	r7, #8
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	bf00      	nop
 80002d4:	08001480 	.word	0x08001480

080002d8 <SVC_Handler>:
__attribute ((nacked)) void SVC_Handler(){
 80002d8:	b480      	push	{r7}
 80002da:	af00      	add	r7, sp, #0

	__asm volatile("MRS R0, MSP");
 80002dc:	f3ef 8008 	mrs	r0, MSP
	__asm volatile("B SVC_Handler_c ");
 80002e0:	f000 b806 	b.w	80002f0 <SVC_Handler_c>
}
 80002e4:	bf00      	nop
 80002e6:	46bd      	mov	sp, r7
 80002e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ec:	4770      	bx	lr
	...

080002f0 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t *pMPSholder){
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b088      	sub	sp, #32
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]

	uint32_t arg0, arg1,res;

	uint8_t *pReturn_addr = (uint8_t*)pMPSholder[6];
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	3318      	adds	r3, #24
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	61fb      	str	r3, [r7, #28]

	pReturn_addr-=2;
 8000300:	69fb      	ldr	r3, [r7, #28]
 8000302:	3b02      	subs	r3, #2
 8000304:	61fb      	str	r3, [r7, #28]

	uint8_t svc_number = *pReturn_addr;
 8000306:	69fb      	ldr	r3, [r7, #28]
 8000308:	781b      	ldrb	r3, [r3, #0]
 800030a:	76fb      	strb	r3, [r7, #27]

	printf("Svc number is : %d\n",svc_number);
 800030c:	7efb      	ldrb	r3, [r7, #27]
 800030e:	4619      	mov	r1, r3
 8000310:	481b      	ldr	r0, [pc, #108]	; (8000380 <SVC_Handler_c+0x90>)
 8000312:	f000 f961 	bl	80005d8 <iprintf>

	arg0 = pMPSholder[0]; //R0
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	617b      	str	r3, [r7, #20]
	arg1 = pMPSholder[1];
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	685b      	ldr	r3, [r3, #4]
 8000320:	613b      	str	r3, [r7, #16]

	switch(svc_number){
 8000322:	7efb      	ldrb	r3, [r7, #27]
 8000324:	3b24      	subs	r3, #36	; 0x24
 8000326:	2b03      	cmp	r3, #3
 8000328:	d820      	bhi.n	800036c <SVC_Handler_c+0x7c>
 800032a:	a201      	add	r2, pc, #4	; (adr r2, 8000330 <SVC_Handler_c+0x40>)
 800032c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000330:	08000341 	.word	0x08000341
 8000334:	0800034b 	.word	0x0800034b
 8000338:	08000357 	.word	0x08000357
 800033c:	08000363 	.word	0x08000363

		case 36:
			res = arg0 + arg1;
 8000340:	697a      	ldr	r2, [r7, #20]
 8000342:	693b      	ldr	r3, [r7, #16]
 8000344:	4413      	add	r3, r2
 8000346:	60fb      	str	r3, [r7, #12]
			break;
 8000348:	e013      	b.n	8000372 <SVC_Handler_c+0x82>
		case 37:
			res = arg0 / arg1 ;
 800034a:	697a      	ldr	r2, [r7, #20]
 800034c:	693b      	ldr	r3, [r7, #16]
 800034e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000352:	60fb      	str	r3, [r7, #12]
			break;
 8000354:	e00d      	b.n	8000372 <SVC_Handler_c+0x82>
		case 38:
			res = arg0 * arg1;
 8000356:	697b      	ldr	r3, [r7, #20]
 8000358:	693a      	ldr	r2, [r7, #16]
 800035a:	fb02 f303 	mul.w	r3, r2, r3
 800035e:	60fb      	str	r3, [r7, #12]
			break;
 8000360:	e007      	b.n	8000372 <SVC_Handler_c+0x82>
		case 39:
			res = arg0 - arg1;
 8000362:	697a      	ldr	r2, [r7, #20]
 8000364:	693b      	ldr	r3, [r7, #16]
 8000366:	1ad3      	subs	r3, r2, r3
 8000368:	60fb      	str	r3, [r7, #12]
			break;
 800036a:	e002      	b.n	8000372 <SVC_Handler_c+0x82>
		default:
			printf("Invalid operation. \n");
 800036c:	4805      	ldr	r0, [pc, #20]	; (8000384 <SVC_Handler_c+0x94>)
 800036e:	f000 f9a7 	bl	80006c0 <puts>


	}
	res = pMPSholder[0];
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	60fb      	str	r3, [r7, #12]

}
 8000378:	bf00      	nop
 800037a:	3720      	adds	r7, #32
 800037c:	46bd      	mov	sp, r7
 800037e:	bd80      	pop	{r7, pc}
 8000380:	0800148c 	.word	0x0800148c
 8000384:	080014a0 	.word	0x080014a0

08000388 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000388:	b480      	push	{r7}
 800038a:	b083      	sub	sp, #12
 800038c:	af00      	add	r7, sp, #0
 800038e:	4603      	mov	r3, r0
 8000390:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000392:	4b0f      	ldr	r3, [pc, #60]	; (80003d0 <ITM_SendChar+0x48>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	4a0e      	ldr	r2, [pc, #56]	; (80003d0 <ITM_SendChar+0x48>)
 8000398:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800039c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800039e:	4b0d      	ldr	r3, [pc, #52]	; (80003d4 <ITM_SendChar+0x4c>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	4a0c      	ldr	r2, [pc, #48]	; (80003d4 <ITM_SendChar+0x4c>)
 80003a4:	f043 0301 	orr.w	r3, r3, #1
 80003a8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003aa:	bf00      	nop
 80003ac:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	f003 0301 	and.w	r3, r3, #1
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d0f8      	beq.n	80003ac <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003ba:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003be:	79fb      	ldrb	r3, [r7, #7]
 80003c0:	6013      	str	r3, [r2, #0]
}
 80003c2:	bf00      	nop
 80003c4:	370c      	adds	r7, #12
 80003c6:	46bd      	mov	sp, r7
 80003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003cc:	4770      	bx	lr
 80003ce:	bf00      	nop
 80003d0:	e000edfc 	.word	0xe000edfc
 80003d4:	e0000e00 	.word	0xe0000e00

080003d8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b086      	sub	sp, #24
 80003dc:	af00      	add	r7, sp, #0
 80003de:	60f8      	str	r0, [r7, #12]
 80003e0:	60b9      	str	r1, [r7, #8]
 80003e2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e4:	2300      	movs	r3, #0
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	e00a      	b.n	8000400 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003ea:	f3af 8000 	nop.w
 80003ee:	4601      	mov	r1, r0
 80003f0:	68bb      	ldr	r3, [r7, #8]
 80003f2:	1c5a      	adds	r2, r3, #1
 80003f4:	60ba      	str	r2, [r7, #8]
 80003f6:	b2ca      	uxtb	r2, r1
 80003f8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fa:	697b      	ldr	r3, [r7, #20]
 80003fc:	3301      	adds	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	697a      	ldr	r2, [r7, #20]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	429a      	cmp	r2, r3
 8000406:	dbf0      	blt.n	80003ea <_read+0x12>
	}

return len;
 8000408:	687b      	ldr	r3, [r7, #4]
}
 800040a:	4618      	mov	r0, r3
 800040c:	3718      	adds	r7, #24
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000412:	b580      	push	{r7, lr}
 8000414:	b086      	sub	sp, #24
 8000416:	af00      	add	r7, sp, #0
 8000418:	60f8      	str	r0, [r7, #12]
 800041a:	60b9      	str	r1, [r7, #8]
 800041c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041e:	2300      	movs	r3, #0
 8000420:	617b      	str	r3, [r7, #20]
 8000422:	e009      	b.n	8000438 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000424:	68bb      	ldr	r3, [r7, #8]
 8000426:	1c5a      	adds	r2, r3, #1
 8000428:	60ba      	str	r2, [r7, #8]
 800042a:	781b      	ldrb	r3, [r3, #0]
 800042c:	4618      	mov	r0, r3
 800042e:	f7ff ffab 	bl	8000388 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000432:	697b      	ldr	r3, [r7, #20]
 8000434:	3301      	adds	r3, #1
 8000436:	617b      	str	r3, [r7, #20]
 8000438:	697a      	ldr	r2, [r7, #20]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	429a      	cmp	r2, r3
 800043e:	dbf1      	blt.n	8000424 <_write+0x12>
	}
	return len;
 8000440:	687b      	ldr	r3, [r7, #4]
}
 8000442:	4618      	mov	r0, r3
 8000444:	3718      	adds	r7, #24
 8000446:	46bd      	mov	sp, r7
 8000448:	bd80      	pop	{r7, pc}

0800044a <_close>:

int _close(int file)
{
 800044a:	b480      	push	{r7}
 800044c:	b083      	sub	sp, #12
 800044e:	af00      	add	r7, sp, #0
 8000450:	6078      	str	r0, [r7, #4]
	return -1;
 8000452:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000456:	4618      	mov	r0, r3
 8000458:	370c      	adds	r7, #12
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr

08000462 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000462:	b480      	push	{r7}
 8000464:	b083      	sub	sp, #12
 8000466:	af00      	add	r7, sp, #0
 8000468:	6078      	str	r0, [r7, #4]
 800046a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800046c:	683b      	ldr	r3, [r7, #0]
 800046e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000472:	605a      	str	r2, [r3, #4]
	return 0;
 8000474:	2300      	movs	r3, #0
}
 8000476:	4618      	mov	r0, r3
 8000478:	370c      	adds	r7, #12
 800047a:	46bd      	mov	sp, r7
 800047c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000480:	4770      	bx	lr

08000482 <_isatty>:

int _isatty(int file)
{
 8000482:	b480      	push	{r7}
 8000484:	b083      	sub	sp, #12
 8000486:	af00      	add	r7, sp, #0
 8000488:	6078      	str	r0, [r7, #4]
	return 1;
 800048a:	2301      	movs	r3, #1
}
 800048c:	4618      	mov	r0, r3
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000496:	4770      	bx	lr

08000498 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000498:	b480      	push	{r7}
 800049a:	b085      	sub	sp, #20
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
	return 0;
 80004a4:	2300      	movs	r3, #0
}
 80004a6:	4618      	mov	r0, r3
 80004a8:	3714      	adds	r7, #20
 80004aa:	46bd      	mov	sp, r7
 80004ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b0:	4770      	bx	lr
	...

080004b4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004b4:	b580      	push	{r7, lr}
 80004b6:	b086      	sub	sp, #24
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004bc:	4a14      	ldr	r2, [pc, #80]	; (8000510 <_sbrk+0x5c>)
 80004be:	4b15      	ldr	r3, [pc, #84]	; (8000514 <_sbrk+0x60>)
 80004c0:	1ad3      	subs	r3, r2, r3
 80004c2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004c4:	697b      	ldr	r3, [r7, #20]
 80004c6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004c8:	4b13      	ldr	r3, [pc, #76]	; (8000518 <_sbrk+0x64>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	d102      	bne.n	80004d6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004d0:	4b11      	ldr	r3, [pc, #68]	; (8000518 <_sbrk+0x64>)
 80004d2:	4a12      	ldr	r2, [pc, #72]	; (800051c <_sbrk+0x68>)
 80004d4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004d6:	4b10      	ldr	r3, [pc, #64]	; (8000518 <_sbrk+0x64>)
 80004d8:	681a      	ldr	r2, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4413      	add	r3, r2
 80004de:	693a      	ldr	r2, [r7, #16]
 80004e0:	429a      	cmp	r2, r3
 80004e2:	d207      	bcs.n	80004f4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004e4:	f000 f846 	bl	8000574 <__errno>
 80004e8:	4602      	mov	r2, r0
 80004ea:	230c      	movs	r3, #12
 80004ec:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80004ee:	f04f 33ff 	mov.w	r3, #4294967295
 80004f2:	e009      	b.n	8000508 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004f4:	4b08      	ldr	r3, [pc, #32]	; (8000518 <_sbrk+0x64>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004fa:	4b07      	ldr	r3, [pc, #28]	; (8000518 <_sbrk+0x64>)
 80004fc:	681a      	ldr	r2, [r3, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4413      	add	r3, r2
 8000502:	4a05      	ldr	r2, [pc, #20]	; (8000518 <_sbrk+0x64>)
 8000504:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000506:	68fb      	ldr	r3, [r7, #12]
}
 8000508:	4618      	mov	r0, r3
 800050a:	3718      	adds	r7, #24
 800050c:	46bd      	mov	sp, r7
 800050e:	bd80      	pop	{r7, pc}
 8000510:	20020000 	.word	0x20020000
 8000514:	00000400 	.word	0x00000400
 8000518:	20000080 	.word	0x20000080
 800051c:	20000090 	.word	0x20000090

08000520 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000520:	480d      	ldr	r0, [pc, #52]	; (8000558 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000522:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000524:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000528:	480c      	ldr	r0, [pc, #48]	; (800055c <LoopForever+0x6>)
  ldr r1, =_edata
 800052a:	490d      	ldr	r1, [pc, #52]	; (8000560 <LoopForever+0xa>)
  ldr r2, =_sidata
 800052c:	4a0d      	ldr	r2, [pc, #52]	; (8000564 <LoopForever+0xe>)
  movs r3, #0
 800052e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000530:	e002      	b.n	8000538 <LoopCopyDataInit>

08000532 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000532:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000534:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000536:	3304      	adds	r3, #4

08000538 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000538:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800053a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800053c:	d3f9      	bcc.n	8000532 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800053e:	4a0a      	ldr	r2, [pc, #40]	; (8000568 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000540:	4c0a      	ldr	r4, [pc, #40]	; (800056c <LoopForever+0x16>)
  movs r3, #0
 8000542:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000544:	e001      	b.n	800054a <LoopFillZerobss>

08000546 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000546:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000548:	3204      	adds	r2, #4

0800054a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800054a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800054c:	d3fb      	bcc.n	8000546 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800054e:	f000 f817 	bl	8000580 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000552:	f7ff fead 	bl	80002b0 <main>

08000556 <LoopForever>:

LoopForever:
    b LoopForever
 8000556:	e7fe      	b.n	8000556 <LoopForever>
  ldr   r0, =_estack
 8000558:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800055c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000560:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000564:	08001554 	.word	0x08001554
  ldr r2, =_sbss
 8000568:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800056c:	20000090 	.word	0x20000090

08000570 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000570:	e7fe      	b.n	8000570 <ADC_IRQHandler>
	...

08000574 <__errno>:
 8000574:	4b01      	ldr	r3, [pc, #4]	; (800057c <__errno+0x8>)
 8000576:	6818      	ldr	r0, [r3, #0]
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop
 800057c:	20000000 	.word	0x20000000

08000580 <__libc_init_array>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	4e0d      	ldr	r6, [pc, #52]	; (80005b8 <__libc_init_array+0x38>)
 8000584:	4c0d      	ldr	r4, [pc, #52]	; (80005bc <__libc_init_array+0x3c>)
 8000586:	1ba4      	subs	r4, r4, r6
 8000588:	10a4      	asrs	r4, r4, #2
 800058a:	2500      	movs	r5, #0
 800058c:	42a5      	cmp	r5, r4
 800058e:	d109      	bne.n	80005a4 <__libc_init_array+0x24>
 8000590:	4e0b      	ldr	r6, [pc, #44]	; (80005c0 <__libc_init_array+0x40>)
 8000592:	4c0c      	ldr	r4, [pc, #48]	; (80005c4 <__libc_init_array+0x44>)
 8000594:	f000 ff68 	bl	8001468 <_init>
 8000598:	1ba4      	subs	r4, r4, r6
 800059a:	10a4      	asrs	r4, r4, #2
 800059c:	2500      	movs	r5, #0
 800059e:	42a5      	cmp	r5, r4
 80005a0:	d105      	bne.n	80005ae <__libc_init_array+0x2e>
 80005a2:	bd70      	pop	{r4, r5, r6, pc}
 80005a4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005a8:	4798      	blx	r3
 80005aa:	3501      	adds	r5, #1
 80005ac:	e7ee      	b.n	800058c <__libc_init_array+0xc>
 80005ae:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005b2:	4798      	blx	r3
 80005b4:	3501      	adds	r5, #1
 80005b6:	e7f2      	b.n	800059e <__libc_init_array+0x1e>
 80005b8:	0800154c 	.word	0x0800154c
 80005bc:	0800154c 	.word	0x0800154c
 80005c0:	0800154c 	.word	0x0800154c
 80005c4:	08001550 	.word	0x08001550

080005c8 <memset>:
 80005c8:	4402      	add	r2, r0
 80005ca:	4603      	mov	r3, r0
 80005cc:	4293      	cmp	r3, r2
 80005ce:	d100      	bne.n	80005d2 <memset+0xa>
 80005d0:	4770      	bx	lr
 80005d2:	f803 1b01 	strb.w	r1, [r3], #1
 80005d6:	e7f9      	b.n	80005cc <memset+0x4>

080005d8 <iprintf>:
 80005d8:	b40f      	push	{r0, r1, r2, r3}
 80005da:	4b0a      	ldr	r3, [pc, #40]	; (8000604 <iprintf+0x2c>)
 80005dc:	b513      	push	{r0, r1, r4, lr}
 80005de:	681c      	ldr	r4, [r3, #0]
 80005e0:	b124      	cbz	r4, 80005ec <iprintf+0x14>
 80005e2:	69a3      	ldr	r3, [r4, #24]
 80005e4:	b913      	cbnz	r3, 80005ec <iprintf+0x14>
 80005e6:	4620      	mov	r0, r4
 80005e8:	f000 fa22 	bl	8000a30 <__sinit>
 80005ec:	ab05      	add	r3, sp, #20
 80005ee:	9a04      	ldr	r2, [sp, #16]
 80005f0:	68a1      	ldr	r1, [r4, #8]
 80005f2:	9301      	str	r3, [sp, #4]
 80005f4:	4620      	mov	r0, r4
 80005f6:	f000 fbdb 	bl	8000db0 <_vfiprintf_r>
 80005fa:	b002      	add	sp, #8
 80005fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000600:	b004      	add	sp, #16
 8000602:	4770      	bx	lr
 8000604:	20000000 	.word	0x20000000

08000608 <_puts_r>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	460e      	mov	r6, r1
 800060c:	4605      	mov	r5, r0
 800060e:	b118      	cbz	r0, 8000618 <_puts_r+0x10>
 8000610:	6983      	ldr	r3, [r0, #24]
 8000612:	b90b      	cbnz	r3, 8000618 <_puts_r+0x10>
 8000614:	f000 fa0c 	bl	8000a30 <__sinit>
 8000618:	69ab      	ldr	r3, [r5, #24]
 800061a:	68ac      	ldr	r4, [r5, #8]
 800061c:	b913      	cbnz	r3, 8000624 <_puts_r+0x1c>
 800061e:	4628      	mov	r0, r5
 8000620:	f000 fa06 	bl	8000a30 <__sinit>
 8000624:	4b23      	ldr	r3, [pc, #140]	; (80006b4 <_puts_r+0xac>)
 8000626:	429c      	cmp	r4, r3
 8000628:	d117      	bne.n	800065a <_puts_r+0x52>
 800062a:	686c      	ldr	r4, [r5, #4]
 800062c:	89a3      	ldrh	r3, [r4, #12]
 800062e:	071b      	lsls	r3, r3, #28
 8000630:	d51d      	bpl.n	800066e <_puts_r+0x66>
 8000632:	6923      	ldr	r3, [r4, #16]
 8000634:	b1db      	cbz	r3, 800066e <_puts_r+0x66>
 8000636:	3e01      	subs	r6, #1
 8000638:	68a3      	ldr	r3, [r4, #8]
 800063a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800063e:	3b01      	subs	r3, #1
 8000640:	60a3      	str	r3, [r4, #8]
 8000642:	b9e9      	cbnz	r1, 8000680 <_puts_r+0x78>
 8000644:	2b00      	cmp	r3, #0
 8000646:	da2e      	bge.n	80006a6 <_puts_r+0x9e>
 8000648:	4622      	mov	r2, r4
 800064a:	210a      	movs	r1, #10
 800064c:	4628      	mov	r0, r5
 800064e:	f000 f83f 	bl	80006d0 <__swbuf_r>
 8000652:	3001      	adds	r0, #1
 8000654:	d011      	beq.n	800067a <_puts_r+0x72>
 8000656:	200a      	movs	r0, #10
 8000658:	e011      	b.n	800067e <_puts_r+0x76>
 800065a:	4b17      	ldr	r3, [pc, #92]	; (80006b8 <_puts_r+0xb0>)
 800065c:	429c      	cmp	r4, r3
 800065e:	d101      	bne.n	8000664 <_puts_r+0x5c>
 8000660:	68ac      	ldr	r4, [r5, #8]
 8000662:	e7e3      	b.n	800062c <_puts_r+0x24>
 8000664:	4b15      	ldr	r3, [pc, #84]	; (80006bc <_puts_r+0xb4>)
 8000666:	429c      	cmp	r4, r3
 8000668:	bf08      	it	eq
 800066a:	68ec      	ldreq	r4, [r5, #12]
 800066c:	e7de      	b.n	800062c <_puts_r+0x24>
 800066e:	4621      	mov	r1, r4
 8000670:	4628      	mov	r0, r5
 8000672:	f000 f87f 	bl	8000774 <__swsetup_r>
 8000676:	2800      	cmp	r0, #0
 8000678:	d0dd      	beq.n	8000636 <_puts_r+0x2e>
 800067a:	f04f 30ff 	mov.w	r0, #4294967295
 800067e:	bd70      	pop	{r4, r5, r6, pc}
 8000680:	2b00      	cmp	r3, #0
 8000682:	da04      	bge.n	800068e <_puts_r+0x86>
 8000684:	69a2      	ldr	r2, [r4, #24]
 8000686:	429a      	cmp	r2, r3
 8000688:	dc06      	bgt.n	8000698 <_puts_r+0x90>
 800068a:	290a      	cmp	r1, #10
 800068c:	d004      	beq.n	8000698 <_puts_r+0x90>
 800068e:	6823      	ldr	r3, [r4, #0]
 8000690:	1c5a      	adds	r2, r3, #1
 8000692:	6022      	str	r2, [r4, #0]
 8000694:	7019      	strb	r1, [r3, #0]
 8000696:	e7cf      	b.n	8000638 <_puts_r+0x30>
 8000698:	4622      	mov	r2, r4
 800069a:	4628      	mov	r0, r5
 800069c:	f000 f818 	bl	80006d0 <__swbuf_r>
 80006a0:	3001      	adds	r0, #1
 80006a2:	d1c9      	bne.n	8000638 <_puts_r+0x30>
 80006a4:	e7e9      	b.n	800067a <_puts_r+0x72>
 80006a6:	6823      	ldr	r3, [r4, #0]
 80006a8:	200a      	movs	r0, #10
 80006aa:	1c5a      	adds	r2, r3, #1
 80006ac:	6022      	str	r2, [r4, #0]
 80006ae:	7018      	strb	r0, [r3, #0]
 80006b0:	e7e5      	b.n	800067e <_puts_r+0x76>
 80006b2:	bf00      	nop
 80006b4:	080014d8 	.word	0x080014d8
 80006b8:	080014f8 	.word	0x080014f8
 80006bc:	080014b8 	.word	0x080014b8

080006c0 <puts>:
 80006c0:	4b02      	ldr	r3, [pc, #8]	; (80006cc <puts+0xc>)
 80006c2:	4601      	mov	r1, r0
 80006c4:	6818      	ldr	r0, [r3, #0]
 80006c6:	f7ff bf9f 	b.w	8000608 <_puts_r>
 80006ca:	bf00      	nop
 80006cc:	20000000 	.word	0x20000000

080006d0 <__swbuf_r>:
 80006d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006d2:	460e      	mov	r6, r1
 80006d4:	4614      	mov	r4, r2
 80006d6:	4605      	mov	r5, r0
 80006d8:	b118      	cbz	r0, 80006e2 <__swbuf_r+0x12>
 80006da:	6983      	ldr	r3, [r0, #24]
 80006dc:	b90b      	cbnz	r3, 80006e2 <__swbuf_r+0x12>
 80006de:	f000 f9a7 	bl	8000a30 <__sinit>
 80006e2:	4b21      	ldr	r3, [pc, #132]	; (8000768 <__swbuf_r+0x98>)
 80006e4:	429c      	cmp	r4, r3
 80006e6:	d12a      	bne.n	800073e <__swbuf_r+0x6e>
 80006e8:	686c      	ldr	r4, [r5, #4]
 80006ea:	69a3      	ldr	r3, [r4, #24]
 80006ec:	60a3      	str	r3, [r4, #8]
 80006ee:	89a3      	ldrh	r3, [r4, #12]
 80006f0:	071a      	lsls	r2, r3, #28
 80006f2:	d52e      	bpl.n	8000752 <__swbuf_r+0x82>
 80006f4:	6923      	ldr	r3, [r4, #16]
 80006f6:	b363      	cbz	r3, 8000752 <__swbuf_r+0x82>
 80006f8:	6923      	ldr	r3, [r4, #16]
 80006fa:	6820      	ldr	r0, [r4, #0]
 80006fc:	1ac0      	subs	r0, r0, r3
 80006fe:	6963      	ldr	r3, [r4, #20]
 8000700:	b2f6      	uxtb	r6, r6
 8000702:	4283      	cmp	r3, r0
 8000704:	4637      	mov	r7, r6
 8000706:	dc04      	bgt.n	8000712 <__swbuf_r+0x42>
 8000708:	4621      	mov	r1, r4
 800070a:	4628      	mov	r0, r5
 800070c:	f000 f926 	bl	800095c <_fflush_r>
 8000710:	bb28      	cbnz	r0, 800075e <__swbuf_r+0x8e>
 8000712:	68a3      	ldr	r3, [r4, #8]
 8000714:	3b01      	subs	r3, #1
 8000716:	60a3      	str	r3, [r4, #8]
 8000718:	6823      	ldr	r3, [r4, #0]
 800071a:	1c5a      	adds	r2, r3, #1
 800071c:	6022      	str	r2, [r4, #0]
 800071e:	701e      	strb	r6, [r3, #0]
 8000720:	6963      	ldr	r3, [r4, #20]
 8000722:	3001      	adds	r0, #1
 8000724:	4283      	cmp	r3, r0
 8000726:	d004      	beq.n	8000732 <__swbuf_r+0x62>
 8000728:	89a3      	ldrh	r3, [r4, #12]
 800072a:	07db      	lsls	r3, r3, #31
 800072c:	d519      	bpl.n	8000762 <__swbuf_r+0x92>
 800072e:	2e0a      	cmp	r6, #10
 8000730:	d117      	bne.n	8000762 <__swbuf_r+0x92>
 8000732:	4621      	mov	r1, r4
 8000734:	4628      	mov	r0, r5
 8000736:	f000 f911 	bl	800095c <_fflush_r>
 800073a:	b190      	cbz	r0, 8000762 <__swbuf_r+0x92>
 800073c:	e00f      	b.n	800075e <__swbuf_r+0x8e>
 800073e:	4b0b      	ldr	r3, [pc, #44]	; (800076c <__swbuf_r+0x9c>)
 8000740:	429c      	cmp	r4, r3
 8000742:	d101      	bne.n	8000748 <__swbuf_r+0x78>
 8000744:	68ac      	ldr	r4, [r5, #8]
 8000746:	e7d0      	b.n	80006ea <__swbuf_r+0x1a>
 8000748:	4b09      	ldr	r3, [pc, #36]	; (8000770 <__swbuf_r+0xa0>)
 800074a:	429c      	cmp	r4, r3
 800074c:	bf08      	it	eq
 800074e:	68ec      	ldreq	r4, [r5, #12]
 8000750:	e7cb      	b.n	80006ea <__swbuf_r+0x1a>
 8000752:	4621      	mov	r1, r4
 8000754:	4628      	mov	r0, r5
 8000756:	f000 f80d 	bl	8000774 <__swsetup_r>
 800075a:	2800      	cmp	r0, #0
 800075c:	d0cc      	beq.n	80006f8 <__swbuf_r+0x28>
 800075e:	f04f 37ff 	mov.w	r7, #4294967295
 8000762:	4638      	mov	r0, r7
 8000764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000766:	bf00      	nop
 8000768:	080014d8 	.word	0x080014d8
 800076c:	080014f8 	.word	0x080014f8
 8000770:	080014b8 	.word	0x080014b8

08000774 <__swsetup_r>:
 8000774:	4b32      	ldr	r3, [pc, #200]	; (8000840 <__swsetup_r+0xcc>)
 8000776:	b570      	push	{r4, r5, r6, lr}
 8000778:	681d      	ldr	r5, [r3, #0]
 800077a:	4606      	mov	r6, r0
 800077c:	460c      	mov	r4, r1
 800077e:	b125      	cbz	r5, 800078a <__swsetup_r+0x16>
 8000780:	69ab      	ldr	r3, [r5, #24]
 8000782:	b913      	cbnz	r3, 800078a <__swsetup_r+0x16>
 8000784:	4628      	mov	r0, r5
 8000786:	f000 f953 	bl	8000a30 <__sinit>
 800078a:	4b2e      	ldr	r3, [pc, #184]	; (8000844 <__swsetup_r+0xd0>)
 800078c:	429c      	cmp	r4, r3
 800078e:	d10f      	bne.n	80007b0 <__swsetup_r+0x3c>
 8000790:	686c      	ldr	r4, [r5, #4]
 8000792:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000796:	b29a      	uxth	r2, r3
 8000798:	0715      	lsls	r5, r2, #28
 800079a:	d42c      	bmi.n	80007f6 <__swsetup_r+0x82>
 800079c:	06d0      	lsls	r0, r2, #27
 800079e:	d411      	bmi.n	80007c4 <__swsetup_r+0x50>
 80007a0:	2209      	movs	r2, #9
 80007a2:	6032      	str	r2, [r6, #0]
 80007a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007a8:	81a3      	strh	r3, [r4, #12]
 80007aa:	f04f 30ff 	mov.w	r0, #4294967295
 80007ae:	e03e      	b.n	800082e <__swsetup_r+0xba>
 80007b0:	4b25      	ldr	r3, [pc, #148]	; (8000848 <__swsetup_r+0xd4>)
 80007b2:	429c      	cmp	r4, r3
 80007b4:	d101      	bne.n	80007ba <__swsetup_r+0x46>
 80007b6:	68ac      	ldr	r4, [r5, #8]
 80007b8:	e7eb      	b.n	8000792 <__swsetup_r+0x1e>
 80007ba:	4b24      	ldr	r3, [pc, #144]	; (800084c <__swsetup_r+0xd8>)
 80007bc:	429c      	cmp	r4, r3
 80007be:	bf08      	it	eq
 80007c0:	68ec      	ldreq	r4, [r5, #12]
 80007c2:	e7e6      	b.n	8000792 <__swsetup_r+0x1e>
 80007c4:	0751      	lsls	r1, r2, #29
 80007c6:	d512      	bpl.n	80007ee <__swsetup_r+0x7a>
 80007c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ca:	b141      	cbz	r1, 80007de <__swsetup_r+0x6a>
 80007cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007d0:	4299      	cmp	r1, r3
 80007d2:	d002      	beq.n	80007da <__swsetup_r+0x66>
 80007d4:	4630      	mov	r0, r6
 80007d6:	f000 fa19 	bl	8000c0c <_free_r>
 80007da:	2300      	movs	r3, #0
 80007dc:	6363      	str	r3, [r4, #52]	; 0x34
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80007e4:	81a3      	strh	r3, [r4, #12]
 80007e6:	2300      	movs	r3, #0
 80007e8:	6063      	str	r3, [r4, #4]
 80007ea:	6923      	ldr	r3, [r4, #16]
 80007ec:	6023      	str	r3, [r4, #0]
 80007ee:	89a3      	ldrh	r3, [r4, #12]
 80007f0:	f043 0308 	orr.w	r3, r3, #8
 80007f4:	81a3      	strh	r3, [r4, #12]
 80007f6:	6923      	ldr	r3, [r4, #16]
 80007f8:	b94b      	cbnz	r3, 800080e <__swsetup_r+0x9a>
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000800:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000804:	d003      	beq.n	800080e <__swsetup_r+0x9a>
 8000806:	4621      	mov	r1, r4
 8000808:	4630      	mov	r0, r6
 800080a:	f000 f9bf 	bl	8000b8c <__smakebuf_r>
 800080e:	89a2      	ldrh	r2, [r4, #12]
 8000810:	f012 0301 	ands.w	r3, r2, #1
 8000814:	d00c      	beq.n	8000830 <__swsetup_r+0xbc>
 8000816:	2300      	movs	r3, #0
 8000818:	60a3      	str	r3, [r4, #8]
 800081a:	6963      	ldr	r3, [r4, #20]
 800081c:	425b      	negs	r3, r3
 800081e:	61a3      	str	r3, [r4, #24]
 8000820:	6923      	ldr	r3, [r4, #16]
 8000822:	b953      	cbnz	r3, 800083a <__swsetup_r+0xc6>
 8000824:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000828:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800082c:	d1ba      	bne.n	80007a4 <__swsetup_r+0x30>
 800082e:	bd70      	pop	{r4, r5, r6, pc}
 8000830:	0792      	lsls	r2, r2, #30
 8000832:	bf58      	it	pl
 8000834:	6963      	ldrpl	r3, [r4, #20]
 8000836:	60a3      	str	r3, [r4, #8]
 8000838:	e7f2      	b.n	8000820 <__swsetup_r+0xac>
 800083a:	2000      	movs	r0, #0
 800083c:	e7f7      	b.n	800082e <__swsetup_r+0xba>
 800083e:	bf00      	nop
 8000840:	20000000 	.word	0x20000000
 8000844:	080014d8 	.word	0x080014d8
 8000848:	080014f8 	.word	0x080014f8
 800084c:	080014b8 	.word	0x080014b8

08000850 <__sflush_r>:
 8000850:	898a      	ldrh	r2, [r1, #12]
 8000852:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000856:	4605      	mov	r5, r0
 8000858:	0710      	lsls	r0, r2, #28
 800085a:	460c      	mov	r4, r1
 800085c:	d458      	bmi.n	8000910 <__sflush_r+0xc0>
 800085e:	684b      	ldr	r3, [r1, #4]
 8000860:	2b00      	cmp	r3, #0
 8000862:	dc05      	bgt.n	8000870 <__sflush_r+0x20>
 8000864:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000866:	2b00      	cmp	r3, #0
 8000868:	dc02      	bgt.n	8000870 <__sflush_r+0x20>
 800086a:	2000      	movs	r0, #0
 800086c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000870:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000872:	2e00      	cmp	r6, #0
 8000874:	d0f9      	beq.n	800086a <__sflush_r+0x1a>
 8000876:	2300      	movs	r3, #0
 8000878:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800087c:	682f      	ldr	r7, [r5, #0]
 800087e:	6a21      	ldr	r1, [r4, #32]
 8000880:	602b      	str	r3, [r5, #0]
 8000882:	d032      	beq.n	80008ea <__sflush_r+0x9a>
 8000884:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000886:	89a3      	ldrh	r3, [r4, #12]
 8000888:	075a      	lsls	r2, r3, #29
 800088a:	d505      	bpl.n	8000898 <__sflush_r+0x48>
 800088c:	6863      	ldr	r3, [r4, #4]
 800088e:	1ac0      	subs	r0, r0, r3
 8000890:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000892:	b10b      	cbz	r3, 8000898 <__sflush_r+0x48>
 8000894:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000896:	1ac0      	subs	r0, r0, r3
 8000898:	2300      	movs	r3, #0
 800089a:	4602      	mov	r2, r0
 800089c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800089e:	6a21      	ldr	r1, [r4, #32]
 80008a0:	4628      	mov	r0, r5
 80008a2:	47b0      	blx	r6
 80008a4:	1c43      	adds	r3, r0, #1
 80008a6:	89a3      	ldrh	r3, [r4, #12]
 80008a8:	d106      	bne.n	80008b8 <__sflush_r+0x68>
 80008aa:	6829      	ldr	r1, [r5, #0]
 80008ac:	291d      	cmp	r1, #29
 80008ae:	d848      	bhi.n	8000942 <__sflush_r+0xf2>
 80008b0:	4a29      	ldr	r2, [pc, #164]	; (8000958 <__sflush_r+0x108>)
 80008b2:	40ca      	lsrs	r2, r1
 80008b4:	07d6      	lsls	r6, r2, #31
 80008b6:	d544      	bpl.n	8000942 <__sflush_r+0xf2>
 80008b8:	2200      	movs	r2, #0
 80008ba:	6062      	str	r2, [r4, #4]
 80008bc:	04d9      	lsls	r1, r3, #19
 80008be:	6922      	ldr	r2, [r4, #16]
 80008c0:	6022      	str	r2, [r4, #0]
 80008c2:	d504      	bpl.n	80008ce <__sflush_r+0x7e>
 80008c4:	1c42      	adds	r2, r0, #1
 80008c6:	d101      	bne.n	80008cc <__sflush_r+0x7c>
 80008c8:	682b      	ldr	r3, [r5, #0]
 80008ca:	b903      	cbnz	r3, 80008ce <__sflush_r+0x7e>
 80008cc:	6560      	str	r0, [r4, #84]	; 0x54
 80008ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008d0:	602f      	str	r7, [r5, #0]
 80008d2:	2900      	cmp	r1, #0
 80008d4:	d0c9      	beq.n	800086a <__sflush_r+0x1a>
 80008d6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008da:	4299      	cmp	r1, r3
 80008dc:	d002      	beq.n	80008e4 <__sflush_r+0x94>
 80008de:	4628      	mov	r0, r5
 80008e0:	f000 f994 	bl	8000c0c <_free_r>
 80008e4:	2000      	movs	r0, #0
 80008e6:	6360      	str	r0, [r4, #52]	; 0x34
 80008e8:	e7c0      	b.n	800086c <__sflush_r+0x1c>
 80008ea:	2301      	movs	r3, #1
 80008ec:	4628      	mov	r0, r5
 80008ee:	47b0      	blx	r6
 80008f0:	1c41      	adds	r1, r0, #1
 80008f2:	d1c8      	bne.n	8000886 <__sflush_r+0x36>
 80008f4:	682b      	ldr	r3, [r5, #0]
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	d0c5      	beq.n	8000886 <__sflush_r+0x36>
 80008fa:	2b1d      	cmp	r3, #29
 80008fc:	d001      	beq.n	8000902 <__sflush_r+0xb2>
 80008fe:	2b16      	cmp	r3, #22
 8000900:	d101      	bne.n	8000906 <__sflush_r+0xb6>
 8000902:	602f      	str	r7, [r5, #0]
 8000904:	e7b1      	b.n	800086a <__sflush_r+0x1a>
 8000906:	89a3      	ldrh	r3, [r4, #12]
 8000908:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800090c:	81a3      	strh	r3, [r4, #12]
 800090e:	e7ad      	b.n	800086c <__sflush_r+0x1c>
 8000910:	690f      	ldr	r7, [r1, #16]
 8000912:	2f00      	cmp	r7, #0
 8000914:	d0a9      	beq.n	800086a <__sflush_r+0x1a>
 8000916:	0793      	lsls	r3, r2, #30
 8000918:	680e      	ldr	r6, [r1, #0]
 800091a:	bf08      	it	eq
 800091c:	694b      	ldreq	r3, [r1, #20]
 800091e:	600f      	str	r7, [r1, #0]
 8000920:	bf18      	it	ne
 8000922:	2300      	movne	r3, #0
 8000924:	eba6 0807 	sub.w	r8, r6, r7
 8000928:	608b      	str	r3, [r1, #8]
 800092a:	f1b8 0f00 	cmp.w	r8, #0
 800092e:	dd9c      	ble.n	800086a <__sflush_r+0x1a>
 8000930:	4643      	mov	r3, r8
 8000932:	463a      	mov	r2, r7
 8000934:	6a21      	ldr	r1, [r4, #32]
 8000936:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000938:	4628      	mov	r0, r5
 800093a:	47b0      	blx	r6
 800093c:	2800      	cmp	r0, #0
 800093e:	dc06      	bgt.n	800094e <__sflush_r+0xfe>
 8000940:	89a3      	ldrh	r3, [r4, #12]
 8000942:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000946:	81a3      	strh	r3, [r4, #12]
 8000948:	f04f 30ff 	mov.w	r0, #4294967295
 800094c:	e78e      	b.n	800086c <__sflush_r+0x1c>
 800094e:	4407      	add	r7, r0
 8000950:	eba8 0800 	sub.w	r8, r8, r0
 8000954:	e7e9      	b.n	800092a <__sflush_r+0xda>
 8000956:	bf00      	nop
 8000958:	20400001 	.word	0x20400001

0800095c <_fflush_r>:
 800095c:	b538      	push	{r3, r4, r5, lr}
 800095e:	690b      	ldr	r3, [r1, #16]
 8000960:	4605      	mov	r5, r0
 8000962:	460c      	mov	r4, r1
 8000964:	b1db      	cbz	r3, 800099e <_fflush_r+0x42>
 8000966:	b118      	cbz	r0, 8000970 <_fflush_r+0x14>
 8000968:	6983      	ldr	r3, [r0, #24]
 800096a:	b90b      	cbnz	r3, 8000970 <_fflush_r+0x14>
 800096c:	f000 f860 	bl	8000a30 <__sinit>
 8000970:	4b0c      	ldr	r3, [pc, #48]	; (80009a4 <_fflush_r+0x48>)
 8000972:	429c      	cmp	r4, r3
 8000974:	d109      	bne.n	800098a <_fflush_r+0x2e>
 8000976:	686c      	ldr	r4, [r5, #4]
 8000978:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800097c:	b17b      	cbz	r3, 800099e <_fflush_r+0x42>
 800097e:	4621      	mov	r1, r4
 8000980:	4628      	mov	r0, r5
 8000982:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000986:	f7ff bf63 	b.w	8000850 <__sflush_r>
 800098a:	4b07      	ldr	r3, [pc, #28]	; (80009a8 <_fflush_r+0x4c>)
 800098c:	429c      	cmp	r4, r3
 800098e:	d101      	bne.n	8000994 <_fflush_r+0x38>
 8000990:	68ac      	ldr	r4, [r5, #8]
 8000992:	e7f1      	b.n	8000978 <_fflush_r+0x1c>
 8000994:	4b05      	ldr	r3, [pc, #20]	; (80009ac <_fflush_r+0x50>)
 8000996:	429c      	cmp	r4, r3
 8000998:	bf08      	it	eq
 800099a:	68ec      	ldreq	r4, [r5, #12]
 800099c:	e7ec      	b.n	8000978 <_fflush_r+0x1c>
 800099e:	2000      	movs	r0, #0
 80009a0:	bd38      	pop	{r3, r4, r5, pc}
 80009a2:	bf00      	nop
 80009a4:	080014d8 	.word	0x080014d8
 80009a8:	080014f8 	.word	0x080014f8
 80009ac:	080014b8 	.word	0x080014b8

080009b0 <std>:
 80009b0:	2300      	movs	r3, #0
 80009b2:	b510      	push	{r4, lr}
 80009b4:	4604      	mov	r4, r0
 80009b6:	e9c0 3300 	strd	r3, r3, [r0]
 80009ba:	6083      	str	r3, [r0, #8]
 80009bc:	8181      	strh	r1, [r0, #12]
 80009be:	6643      	str	r3, [r0, #100]	; 0x64
 80009c0:	81c2      	strh	r2, [r0, #14]
 80009c2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009c6:	6183      	str	r3, [r0, #24]
 80009c8:	4619      	mov	r1, r3
 80009ca:	2208      	movs	r2, #8
 80009cc:	305c      	adds	r0, #92	; 0x5c
 80009ce:	f7ff fdfb 	bl	80005c8 <memset>
 80009d2:	4b05      	ldr	r3, [pc, #20]	; (80009e8 <std+0x38>)
 80009d4:	6263      	str	r3, [r4, #36]	; 0x24
 80009d6:	4b05      	ldr	r3, [pc, #20]	; (80009ec <std+0x3c>)
 80009d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80009da:	4b05      	ldr	r3, [pc, #20]	; (80009f0 <std+0x40>)
 80009dc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009de:	4b05      	ldr	r3, [pc, #20]	; (80009f4 <std+0x44>)
 80009e0:	6224      	str	r4, [r4, #32]
 80009e2:	6323      	str	r3, [r4, #48]	; 0x30
 80009e4:	bd10      	pop	{r4, pc}
 80009e6:	bf00      	nop
 80009e8:	0800130d 	.word	0x0800130d
 80009ec:	0800132f 	.word	0x0800132f
 80009f0:	08001367 	.word	0x08001367
 80009f4:	0800138b 	.word	0x0800138b

080009f8 <_cleanup_r>:
 80009f8:	4901      	ldr	r1, [pc, #4]	; (8000a00 <_cleanup_r+0x8>)
 80009fa:	f000 b885 	b.w	8000b08 <_fwalk_reent>
 80009fe:	bf00      	nop
 8000a00:	0800095d 	.word	0x0800095d

08000a04 <__sfmoreglue>:
 8000a04:	b570      	push	{r4, r5, r6, lr}
 8000a06:	1e4a      	subs	r2, r1, #1
 8000a08:	2568      	movs	r5, #104	; 0x68
 8000a0a:	4355      	muls	r5, r2
 8000a0c:	460e      	mov	r6, r1
 8000a0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a12:	f000 f949 	bl	8000ca8 <_malloc_r>
 8000a16:	4604      	mov	r4, r0
 8000a18:	b140      	cbz	r0, 8000a2c <__sfmoreglue+0x28>
 8000a1a:	2100      	movs	r1, #0
 8000a1c:	e9c0 1600 	strd	r1, r6, [r0]
 8000a20:	300c      	adds	r0, #12
 8000a22:	60a0      	str	r0, [r4, #8]
 8000a24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a28:	f7ff fdce 	bl	80005c8 <memset>
 8000a2c:	4620      	mov	r0, r4
 8000a2e:	bd70      	pop	{r4, r5, r6, pc}

08000a30 <__sinit>:
 8000a30:	6983      	ldr	r3, [r0, #24]
 8000a32:	b510      	push	{r4, lr}
 8000a34:	4604      	mov	r4, r0
 8000a36:	bb33      	cbnz	r3, 8000a86 <__sinit+0x56>
 8000a38:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000a3c:	6503      	str	r3, [r0, #80]	; 0x50
 8000a3e:	4b12      	ldr	r3, [pc, #72]	; (8000a88 <__sinit+0x58>)
 8000a40:	4a12      	ldr	r2, [pc, #72]	; (8000a8c <__sinit+0x5c>)
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	6282      	str	r2, [r0, #40]	; 0x28
 8000a46:	4298      	cmp	r0, r3
 8000a48:	bf04      	itt	eq
 8000a4a:	2301      	moveq	r3, #1
 8000a4c:	6183      	streq	r3, [r0, #24]
 8000a4e:	f000 f81f 	bl	8000a90 <__sfp>
 8000a52:	6060      	str	r0, [r4, #4]
 8000a54:	4620      	mov	r0, r4
 8000a56:	f000 f81b 	bl	8000a90 <__sfp>
 8000a5a:	60a0      	str	r0, [r4, #8]
 8000a5c:	4620      	mov	r0, r4
 8000a5e:	f000 f817 	bl	8000a90 <__sfp>
 8000a62:	2200      	movs	r2, #0
 8000a64:	60e0      	str	r0, [r4, #12]
 8000a66:	2104      	movs	r1, #4
 8000a68:	6860      	ldr	r0, [r4, #4]
 8000a6a:	f7ff ffa1 	bl	80009b0 <std>
 8000a6e:	2201      	movs	r2, #1
 8000a70:	2109      	movs	r1, #9
 8000a72:	68a0      	ldr	r0, [r4, #8]
 8000a74:	f7ff ff9c 	bl	80009b0 <std>
 8000a78:	2202      	movs	r2, #2
 8000a7a:	2112      	movs	r1, #18
 8000a7c:	68e0      	ldr	r0, [r4, #12]
 8000a7e:	f7ff ff97 	bl	80009b0 <std>
 8000a82:	2301      	movs	r3, #1
 8000a84:	61a3      	str	r3, [r4, #24]
 8000a86:	bd10      	pop	{r4, pc}
 8000a88:	080014b4 	.word	0x080014b4
 8000a8c:	080009f9 	.word	0x080009f9

08000a90 <__sfp>:
 8000a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a92:	4b1b      	ldr	r3, [pc, #108]	; (8000b00 <__sfp+0x70>)
 8000a94:	681e      	ldr	r6, [r3, #0]
 8000a96:	69b3      	ldr	r3, [r6, #24]
 8000a98:	4607      	mov	r7, r0
 8000a9a:	b913      	cbnz	r3, 8000aa2 <__sfp+0x12>
 8000a9c:	4630      	mov	r0, r6
 8000a9e:	f7ff ffc7 	bl	8000a30 <__sinit>
 8000aa2:	3648      	adds	r6, #72	; 0x48
 8000aa4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000aa8:	3b01      	subs	r3, #1
 8000aaa:	d503      	bpl.n	8000ab4 <__sfp+0x24>
 8000aac:	6833      	ldr	r3, [r6, #0]
 8000aae:	b133      	cbz	r3, 8000abe <__sfp+0x2e>
 8000ab0:	6836      	ldr	r6, [r6, #0]
 8000ab2:	e7f7      	b.n	8000aa4 <__sfp+0x14>
 8000ab4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ab8:	b16d      	cbz	r5, 8000ad6 <__sfp+0x46>
 8000aba:	3468      	adds	r4, #104	; 0x68
 8000abc:	e7f4      	b.n	8000aa8 <__sfp+0x18>
 8000abe:	2104      	movs	r1, #4
 8000ac0:	4638      	mov	r0, r7
 8000ac2:	f7ff ff9f 	bl	8000a04 <__sfmoreglue>
 8000ac6:	6030      	str	r0, [r6, #0]
 8000ac8:	2800      	cmp	r0, #0
 8000aca:	d1f1      	bne.n	8000ab0 <__sfp+0x20>
 8000acc:	230c      	movs	r3, #12
 8000ace:	603b      	str	r3, [r7, #0]
 8000ad0:	4604      	mov	r4, r0
 8000ad2:	4620      	mov	r0, r4
 8000ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ad6:	4b0b      	ldr	r3, [pc, #44]	; (8000b04 <__sfp+0x74>)
 8000ad8:	6665      	str	r5, [r4, #100]	; 0x64
 8000ada:	e9c4 5500 	strd	r5, r5, [r4]
 8000ade:	60a5      	str	r5, [r4, #8]
 8000ae0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000ae4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000ae8:	2208      	movs	r2, #8
 8000aea:	4629      	mov	r1, r5
 8000aec:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000af0:	f7ff fd6a 	bl	80005c8 <memset>
 8000af4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000af8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000afc:	e7e9      	b.n	8000ad2 <__sfp+0x42>
 8000afe:	bf00      	nop
 8000b00:	080014b4 	.word	0x080014b4
 8000b04:	ffff0001 	.word	0xffff0001

08000b08 <_fwalk_reent>:
 8000b08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b0c:	4680      	mov	r8, r0
 8000b0e:	4689      	mov	r9, r1
 8000b10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b14:	2600      	movs	r6, #0
 8000b16:	b914      	cbnz	r4, 8000b1e <_fwalk_reent+0x16>
 8000b18:	4630      	mov	r0, r6
 8000b1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b1e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b22:	3f01      	subs	r7, #1
 8000b24:	d501      	bpl.n	8000b2a <_fwalk_reent+0x22>
 8000b26:	6824      	ldr	r4, [r4, #0]
 8000b28:	e7f5      	b.n	8000b16 <_fwalk_reent+0xe>
 8000b2a:	89ab      	ldrh	r3, [r5, #12]
 8000b2c:	2b01      	cmp	r3, #1
 8000b2e:	d907      	bls.n	8000b40 <_fwalk_reent+0x38>
 8000b30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b34:	3301      	adds	r3, #1
 8000b36:	d003      	beq.n	8000b40 <_fwalk_reent+0x38>
 8000b38:	4629      	mov	r1, r5
 8000b3a:	4640      	mov	r0, r8
 8000b3c:	47c8      	blx	r9
 8000b3e:	4306      	orrs	r6, r0
 8000b40:	3568      	adds	r5, #104	; 0x68
 8000b42:	e7ee      	b.n	8000b22 <_fwalk_reent+0x1a>

08000b44 <__swhatbuf_r>:
 8000b44:	b570      	push	{r4, r5, r6, lr}
 8000b46:	460e      	mov	r6, r1
 8000b48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b4c:	2900      	cmp	r1, #0
 8000b4e:	b096      	sub	sp, #88	; 0x58
 8000b50:	4614      	mov	r4, r2
 8000b52:	461d      	mov	r5, r3
 8000b54:	da07      	bge.n	8000b66 <__swhatbuf_r+0x22>
 8000b56:	2300      	movs	r3, #0
 8000b58:	602b      	str	r3, [r5, #0]
 8000b5a:	89b3      	ldrh	r3, [r6, #12]
 8000b5c:	061a      	lsls	r2, r3, #24
 8000b5e:	d410      	bmi.n	8000b82 <__swhatbuf_r+0x3e>
 8000b60:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b64:	e00e      	b.n	8000b84 <__swhatbuf_r+0x40>
 8000b66:	466a      	mov	r2, sp
 8000b68:	f000 fc36 	bl	80013d8 <_fstat_r>
 8000b6c:	2800      	cmp	r0, #0
 8000b6e:	dbf2      	blt.n	8000b56 <__swhatbuf_r+0x12>
 8000b70:	9a01      	ldr	r2, [sp, #4]
 8000b72:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b76:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b7a:	425a      	negs	r2, r3
 8000b7c:	415a      	adcs	r2, r3
 8000b7e:	602a      	str	r2, [r5, #0]
 8000b80:	e7ee      	b.n	8000b60 <__swhatbuf_r+0x1c>
 8000b82:	2340      	movs	r3, #64	; 0x40
 8000b84:	2000      	movs	r0, #0
 8000b86:	6023      	str	r3, [r4, #0]
 8000b88:	b016      	add	sp, #88	; 0x58
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}

08000b8c <__smakebuf_r>:
 8000b8c:	898b      	ldrh	r3, [r1, #12]
 8000b8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b90:	079d      	lsls	r5, r3, #30
 8000b92:	4606      	mov	r6, r0
 8000b94:	460c      	mov	r4, r1
 8000b96:	d507      	bpl.n	8000ba8 <__smakebuf_r+0x1c>
 8000b98:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b9c:	6023      	str	r3, [r4, #0]
 8000b9e:	6123      	str	r3, [r4, #16]
 8000ba0:	2301      	movs	r3, #1
 8000ba2:	6163      	str	r3, [r4, #20]
 8000ba4:	b002      	add	sp, #8
 8000ba6:	bd70      	pop	{r4, r5, r6, pc}
 8000ba8:	ab01      	add	r3, sp, #4
 8000baa:	466a      	mov	r2, sp
 8000bac:	f7ff ffca 	bl	8000b44 <__swhatbuf_r>
 8000bb0:	9900      	ldr	r1, [sp, #0]
 8000bb2:	4605      	mov	r5, r0
 8000bb4:	4630      	mov	r0, r6
 8000bb6:	f000 f877 	bl	8000ca8 <_malloc_r>
 8000bba:	b948      	cbnz	r0, 8000bd0 <__smakebuf_r+0x44>
 8000bbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bc0:	059a      	lsls	r2, r3, #22
 8000bc2:	d4ef      	bmi.n	8000ba4 <__smakebuf_r+0x18>
 8000bc4:	f023 0303 	bic.w	r3, r3, #3
 8000bc8:	f043 0302 	orr.w	r3, r3, #2
 8000bcc:	81a3      	strh	r3, [r4, #12]
 8000bce:	e7e3      	b.n	8000b98 <__smakebuf_r+0xc>
 8000bd0:	4b0d      	ldr	r3, [pc, #52]	; (8000c08 <__smakebuf_r+0x7c>)
 8000bd2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000bd4:	89a3      	ldrh	r3, [r4, #12]
 8000bd6:	6020      	str	r0, [r4, #0]
 8000bd8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bdc:	81a3      	strh	r3, [r4, #12]
 8000bde:	9b00      	ldr	r3, [sp, #0]
 8000be0:	6163      	str	r3, [r4, #20]
 8000be2:	9b01      	ldr	r3, [sp, #4]
 8000be4:	6120      	str	r0, [r4, #16]
 8000be6:	b15b      	cbz	r3, 8000c00 <__smakebuf_r+0x74>
 8000be8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bec:	4630      	mov	r0, r6
 8000bee:	f000 fc05 	bl	80013fc <_isatty_r>
 8000bf2:	b128      	cbz	r0, 8000c00 <__smakebuf_r+0x74>
 8000bf4:	89a3      	ldrh	r3, [r4, #12]
 8000bf6:	f023 0303 	bic.w	r3, r3, #3
 8000bfa:	f043 0301 	orr.w	r3, r3, #1
 8000bfe:	81a3      	strh	r3, [r4, #12]
 8000c00:	89a3      	ldrh	r3, [r4, #12]
 8000c02:	431d      	orrs	r5, r3
 8000c04:	81a5      	strh	r5, [r4, #12]
 8000c06:	e7cd      	b.n	8000ba4 <__smakebuf_r+0x18>
 8000c08:	080009f9 	.word	0x080009f9

08000c0c <_free_r>:
 8000c0c:	b538      	push	{r3, r4, r5, lr}
 8000c0e:	4605      	mov	r5, r0
 8000c10:	2900      	cmp	r1, #0
 8000c12:	d045      	beq.n	8000ca0 <_free_r+0x94>
 8000c14:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c18:	1f0c      	subs	r4, r1, #4
 8000c1a:	2b00      	cmp	r3, #0
 8000c1c:	bfb8      	it	lt
 8000c1e:	18e4      	addlt	r4, r4, r3
 8000c20:	f000 fc0e 	bl	8001440 <__malloc_lock>
 8000c24:	4a1f      	ldr	r2, [pc, #124]	; (8000ca4 <_free_r+0x98>)
 8000c26:	6813      	ldr	r3, [r2, #0]
 8000c28:	4610      	mov	r0, r2
 8000c2a:	b933      	cbnz	r3, 8000c3a <_free_r+0x2e>
 8000c2c:	6063      	str	r3, [r4, #4]
 8000c2e:	6014      	str	r4, [r2, #0]
 8000c30:	4628      	mov	r0, r5
 8000c32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c36:	f000 bc04 	b.w	8001442 <__malloc_unlock>
 8000c3a:	42a3      	cmp	r3, r4
 8000c3c:	d90c      	bls.n	8000c58 <_free_r+0x4c>
 8000c3e:	6821      	ldr	r1, [r4, #0]
 8000c40:	1862      	adds	r2, r4, r1
 8000c42:	4293      	cmp	r3, r2
 8000c44:	bf04      	itt	eq
 8000c46:	681a      	ldreq	r2, [r3, #0]
 8000c48:	685b      	ldreq	r3, [r3, #4]
 8000c4a:	6063      	str	r3, [r4, #4]
 8000c4c:	bf04      	itt	eq
 8000c4e:	1852      	addeq	r2, r2, r1
 8000c50:	6022      	streq	r2, [r4, #0]
 8000c52:	6004      	str	r4, [r0, #0]
 8000c54:	e7ec      	b.n	8000c30 <_free_r+0x24>
 8000c56:	4613      	mov	r3, r2
 8000c58:	685a      	ldr	r2, [r3, #4]
 8000c5a:	b10a      	cbz	r2, 8000c60 <_free_r+0x54>
 8000c5c:	42a2      	cmp	r2, r4
 8000c5e:	d9fa      	bls.n	8000c56 <_free_r+0x4a>
 8000c60:	6819      	ldr	r1, [r3, #0]
 8000c62:	1858      	adds	r0, r3, r1
 8000c64:	42a0      	cmp	r0, r4
 8000c66:	d10b      	bne.n	8000c80 <_free_r+0x74>
 8000c68:	6820      	ldr	r0, [r4, #0]
 8000c6a:	4401      	add	r1, r0
 8000c6c:	1858      	adds	r0, r3, r1
 8000c6e:	4282      	cmp	r2, r0
 8000c70:	6019      	str	r1, [r3, #0]
 8000c72:	d1dd      	bne.n	8000c30 <_free_r+0x24>
 8000c74:	6810      	ldr	r0, [r2, #0]
 8000c76:	6852      	ldr	r2, [r2, #4]
 8000c78:	605a      	str	r2, [r3, #4]
 8000c7a:	4401      	add	r1, r0
 8000c7c:	6019      	str	r1, [r3, #0]
 8000c7e:	e7d7      	b.n	8000c30 <_free_r+0x24>
 8000c80:	d902      	bls.n	8000c88 <_free_r+0x7c>
 8000c82:	230c      	movs	r3, #12
 8000c84:	602b      	str	r3, [r5, #0]
 8000c86:	e7d3      	b.n	8000c30 <_free_r+0x24>
 8000c88:	6820      	ldr	r0, [r4, #0]
 8000c8a:	1821      	adds	r1, r4, r0
 8000c8c:	428a      	cmp	r2, r1
 8000c8e:	bf04      	itt	eq
 8000c90:	6811      	ldreq	r1, [r2, #0]
 8000c92:	6852      	ldreq	r2, [r2, #4]
 8000c94:	6062      	str	r2, [r4, #4]
 8000c96:	bf04      	itt	eq
 8000c98:	1809      	addeq	r1, r1, r0
 8000c9a:	6021      	streq	r1, [r4, #0]
 8000c9c:	605c      	str	r4, [r3, #4]
 8000c9e:	e7c7      	b.n	8000c30 <_free_r+0x24>
 8000ca0:	bd38      	pop	{r3, r4, r5, pc}
 8000ca2:	bf00      	nop
 8000ca4:	20000084 	.word	0x20000084

08000ca8 <_malloc_r>:
 8000ca8:	b570      	push	{r4, r5, r6, lr}
 8000caa:	1ccd      	adds	r5, r1, #3
 8000cac:	f025 0503 	bic.w	r5, r5, #3
 8000cb0:	3508      	adds	r5, #8
 8000cb2:	2d0c      	cmp	r5, #12
 8000cb4:	bf38      	it	cc
 8000cb6:	250c      	movcc	r5, #12
 8000cb8:	2d00      	cmp	r5, #0
 8000cba:	4606      	mov	r6, r0
 8000cbc:	db01      	blt.n	8000cc2 <_malloc_r+0x1a>
 8000cbe:	42a9      	cmp	r1, r5
 8000cc0:	d903      	bls.n	8000cca <_malloc_r+0x22>
 8000cc2:	230c      	movs	r3, #12
 8000cc4:	6033      	str	r3, [r6, #0]
 8000cc6:	2000      	movs	r0, #0
 8000cc8:	bd70      	pop	{r4, r5, r6, pc}
 8000cca:	f000 fbb9 	bl	8001440 <__malloc_lock>
 8000cce:	4a21      	ldr	r2, [pc, #132]	; (8000d54 <_malloc_r+0xac>)
 8000cd0:	6814      	ldr	r4, [r2, #0]
 8000cd2:	4621      	mov	r1, r4
 8000cd4:	b991      	cbnz	r1, 8000cfc <_malloc_r+0x54>
 8000cd6:	4c20      	ldr	r4, [pc, #128]	; (8000d58 <_malloc_r+0xb0>)
 8000cd8:	6823      	ldr	r3, [r4, #0]
 8000cda:	b91b      	cbnz	r3, 8000ce4 <_malloc_r+0x3c>
 8000cdc:	4630      	mov	r0, r6
 8000cde:	f000 fb05 	bl	80012ec <_sbrk_r>
 8000ce2:	6020      	str	r0, [r4, #0]
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	4630      	mov	r0, r6
 8000ce8:	f000 fb00 	bl	80012ec <_sbrk_r>
 8000cec:	1c43      	adds	r3, r0, #1
 8000cee:	d124      	bne.n	8000d3a <_malloc_r+0x92>
 8000cf0:	230c      	movs	r3, #12
 8000cf2:	6033      	str	r3, [r6, #0]
 8000cf4:	4630      	mov	r0, r6
 8000cf6:	f000 fba4 	bl	8001442 <__malloc_unlock>
 8000cfa:	e7e4      	b.n	8000cc6 <_malloc_r+0x1e>
 8000cfc:	680b      	ldr	r3, [r1, #0]
 8000cfe:	1b5b      	subs	r3, r3, r5
 8000d00:	d418      	bmi.n	8000d34 <_malloc_r+0x8c>
 8000d02:	2b0b      	cmp	r3, #11
 8000d04:	d90f      	bls.n	8000d26 <_malloc_r+0x7e>
 8000d06:	600b      	str	r3, [r1, #0]
 8000d08:	50cd      	str	r5, [r1, r3]
 8000d0a:	18cc      	adds	r4, r1, r3
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	f000 fb98 	bl	8001442 <__malloc_unlock>
 8000d12:	f104 000b 	add.w	r0, r4, #11
 8000d16:	1d23      	adds	r3, r4, #4
 8000d18:	f020 0007 	bic.w	r0, r0, #7
 8000d1c:	1ac3      	subs	r3, r0, r3
 8000d1e:	d0d3      	beq.n	8000cc8 <_malloc_r+0x20>
 8000d20:	425a      	negs	r2, r3
 8000d22:	50e2      	str	r2, [r4, r3]
 8000d24:	e7d0      	b.n	8000cc8 <_malloc_r+0x20>
 8000d26:	428c      	cmp	r4, r1
 8000d28:	684b      	ldr	r3, [r1, #4]
 8000d2a:	bf16      	itet	ne
 8000d2c:	6063      	strne	r3, [r4, #4]
 8000d2e:	6013      	streq	r3, [r2, #0]
 8000d30:	460c      	movne	r4, r1
 8000d32:	e7eb      	b.n	8000d0c <_malloc_r+0x64>
 8000d34:	460c      	mov	r4, r1
 8000d36:	6849      	ldr	r1, [r1, #4]
 8000d38:	e7cc      	b.n	8000cd4 <_malloc_r+0x2c>
 8000d3a:	1cc4      	adds	r4, r0, #3
 8000d3c:	f024 0403 	bic.w	r4, r4, #3
 8000d40:	42a0      	cmp	r0, r4
 8000d42:	d005      	beq.n	8000d50 <_malloc_r+0xa8>
 8000d44:	1a21      	subs	r1, r4, r0
 8000d46:	4630      	mov	r0, r6
 8000d48:	f000 fad0 	bl	80012ec <_sbrk_r>
 8000d4c:	3001      	adds	r0, #1
 8000d4e:	d0cf      	beq.n	8000cf0 <_malloc_r+0x48>
 8000d50:	6025      	str	r5, [r4, #0]
 8000d52:	e7db      	b.n	8000d0c <_malloc_r+0x64>
 8000d54:	20000084 	.word	0x20000084
 8000d58:	20000088 	.word	0x20000088

08000d5c <__sfputc_r>:
 8000d5c:	6893      	ldr	r3, [r2, #8]
 8000d5e:	3b01      	subs	r3, #1
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	b410      	push	{r4}
 8000d64:	6093      	str	r3, [r2, #8]
 8000d66:	da08      	bge.n	8000d7a <__sfputc_r+0x1e>
 8000d68:	6994      	ldr	r4, [r2, #24]
 8000d6a:	42a3      	cmp	r3, r4
 8000d6c:	db01      	blt.n	8000d72 <__sfputc_r+0x16>
 8000d6e:	290a      	cmp	r1, #10
 8000d70:	d103      	bne.n	8000d7a <__sfputc_r+0x1e>
 8000d72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d76:	f7ff bcab 	b.w	80006d0 <__swbuf_r>
 8000d7a:	6813      	ldr	r3, [r2, #0]
 8000d7c:	1c58      	adds	r0, r3, #1
 8000d7e:	6010      	str	r0, [r2, #0]
 8000d80:	7019      	strb	r1, [r3, #0]
 8000d82:	4608      	mov	r0, r1
 8000d84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d88:	4770      	bx	lr

08000d8a <__sfputs_r>:
 8000d8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d8c:	4606      	mov	r6, r0
 8000d8e:	460f      	mov	r7, r1
 8000d90:	4614      	mov	r4, r2
 8000d92:	18d5      	adds	r5, r2, r3
 8000d94:	42ac      	cmp	r4, r5
 8000d96:	d101      	bne.n	8000d9c <__sfputs_r+0x12>
 8000d98:	2000      	movs	r0, #0
 8000d9a:	e007      	b.n	8000dac <__sfputs_r+0x22>
 8000d9c:	463a      	mov	r2, r7
 8000d9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000da2:	4630      	mov	r0, r6
 8000da4:	f7ff ffda 	bl	8000d5c <__sfputc_r>
 8000da8:	1c43      	adds	r3, r0, #1
 8000daa:	d1f3      	bne.n	8000d94 <__sfputs_r+0xa>
 8000dac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000db0 <_vfiprintf_r>:
 8000db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000db4:	460c      	mov	r4, r1
 8000db6:	b09d      	sub	sp, #116	; 0x74
 8000db8:	4617      	mov	r7, r2
 8000dba:	461d      	mov	r5, r3
 8000dbc:	4606      	mov	r6, r0
 8000dbe:	b118      	cbz	r0, 8000dc8 <_vfiprintf_r+0x18>
 8000dc0:	6983      	ldr	r3, [r0, #24]
 8000dc2:	b90b      	cbnz	r3, 8000dc8 <_vfiprintf_r+0x18>
 8000dc4:	f7ff fe34 	bl	8000a30 <__sinit>
 8000dc8:	4b7c      	ldr	r3, [pc, #496]	; (8000fbc <_vfiprintf_r+0x20c>)
 8000dca:	429c      	cmp	r4, r3
 8000dcc:	d158      	bne.n	8000e80 <_vfiprintf_r+0xd0>
 8000dce:	6874      	ldr	r4, [r6, #4]
 8000dd0:	89a3      	ldrh	r3, [r4, #12]
 8000dd2:	0718      	lsls	r0, r3, #28
 8000dd4:	d55e      	bpl.n	8000e94 <_vfiprintf_r+0xe4>
 8000dd6:	6923      	ldr	r3, [r4, #16]
 8000dd8:	2b00      	cmp	r3, #0
 8000dda:	d05b      	beq.n	8000e94 <_vfiprintf_r+0xe4>
 8000ddc:	2300      	movs	r3, #0
 8000dde:	9309      	str	r3, [sp, #36]	; 0x24
 8000de0:	2320      	movs	r3, #32
 8000de2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000de6:	2330      	movs	r3, #48	; 0x30
 8000de8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000dec:	9503      	str	r5, [sp, #12]
 8000dee:	f04f 0b01 	mov.w	fp, #1
 8000df2:	46b8      	mov	r8, r7
 8000df4:	4645      	mov	r5, r8
 8000df6:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000dfa:	b10b      	cbz	r3, 8000e00 <_vfiprintf_r+0x50>
 8000dfc:	2b25      	cmp	r3, #37	; 0x25
 8000dfe:	d154      	bne.n	8000eaa <_vfiprintf_r+0xfa>
 8000e00:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e04:	d00b      	beq.n	8000e1e <_vfiprintf_r+0x6e>
 8000e06:	4653      	mov	r3, sl
 8000e08:	463a      	mov	r2, r7
 8000e0a:	4621      	mov	r1, r4
 8000e0c:	4630      	mov	r0, r6
 8000e0e:	f7ff ffbc 	bl	8000d8a <__sfputs_r>
 8000e12:	3001      	adds	r0, #1
 8000e14:	f000 80c2 	beq.w	8000f9c <_vfiprintf_r+0x1ec>
 8000e18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e1a:	4453      	add	r3, sl
 8000e1c:	9309      	str	r3, [sp, #36]	; 0x24
 8000e1e:	f898 3000 	ldrb.w	r3, [r8]
 8000e22:	2b00      	cmp	r3, #0
 8000e24:	f000 80ba 	beq.w	8000f9c <_vfiprintf_r+0x1ec>
 8000e28:	2300      	movs	r3, #0
 8000e2a:	f04f 32ff 	mov.w	r2, #4294967295
 8000e2e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e32:	9304      	str	r3, [sp, #16]
 8000e34:	9307      	str	r3, [sp, #28]
 8000e36:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e3a:	931a      	str	r3, [sp, #104]	; 0x68
 8000e3c:	46a8      	mov	r8, r5
 8000e3e:	2205      	movs	r2, #5
 8000e40:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000e44:	485e      	ldr	r0, [pc, #376]	; (8000fc0 <_vfiprintf_r+0x210>)
 8000e46:	f7ff f9d3 	bl	80001f0 <memchr>
 8000e4a:	9b04      	ldr	r3, [sp, #16]
 8000e4c:	bb78      	cbnz	r0, 8000eae <_vfiprintf_r+0xfe>
 8000e4e:	06d9      	lsls	r1, r3, #27
 8000e50:	bf44      	itt	mi
 8000e52:	2220      	movmi	r2, #32
 8000e54:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e58:	071a      	lsls	r2, r3, #28
 8000e5a:	bf44      	itt	mi
 8000e5c:	222b      	movmi	r2, #43	; 0x2b
 8000e5e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e62:	782a      	ldrb	r2, [r5, #0]
 8000e64:	2a2a      	cmp	r2, #42	; 0x2a
 8000e66:	d02a      	beq.n	8000ebe <_vfiprintf_r+0x10e>
 8000e68:	9a07      	ldr	r2, [sp, #28]
 8000e6a:	46a8      	mov	r8, r5
 8000e6c:	2000      	movs	r0, #0
 8000e6e:	250a      	movs	r5, #10
 8000e70:	4641      	mov	r1, r8
 8000e72:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e76:	3b30      	subs	r3, #48	; 0x30
 8000e78:	2b09      	cmp	r3, #9
 8000e7a:	d969      	bls.n	8000f50 <_vfiprintf_r+0x1a0>
 8000e7c:	b360      	cbz	r0, 8000ed8 <_vfiprintf_r+0x128>
 8000e7e:	e024      	b.n	8000eca <_vfiprintf_r+0x11a>
 8000e80:	4b50      	ldr	r3, [pc, #320]	; (8000fc4 <_vfiprintf_r+0x214>)
 8000e82:	429c      	cmp	r4, r3
 8000e84:	d101      	bne.n	8000e8a <_vfiprintf_r+0xda>
 8000e86:	68b4      	ldr	r4, [r6, #8]
 8000e88:	e7a2      	b.n	8000dd0 <_vfiprintf_r+0x20>
 8000e8a:	4b4f      	ldr	r3, [pc, #316]	; (8000fc8 <_vfiprintf_r+0x218>)
 8000e8c:	429c      	cmp	r4, r3
 8000e8e:	bf08      	it	eq
 8000e90:	68f4      	ldreq	r4, [r6, #12]
 8000e92:	e79d      	b.n	8000dd0 <_vfiprintf_r+0x20>
 8000e94:	4621      	mov	r1, r4
 8000e96:	4630      	mov	r0, r6
 8000e98:	f7ff fc6c 	bl	8000774 <__swsetup_r>
 8000e9c:	2800      	cmp	r0, #0
 8000e9e:	d09d      	beq.n	8000ddc <_vfiprintf_r+0x2c>
 8000ea0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea4:	b01d      	add	sp, #116	; 0x74
 8000ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000eaa:	46a8      	mov	r8, r5
 8000eac:	e7a2      	b.n	8000df4 <_vfiprintf_r+0x44>
 8000eae:	4a44      	ldr	r2, [pc, #272]	; (8000fc0 <_vfiprintf_r+0x210>)
 8000eb0:	1a80      	subs	r0, r0, r2
 8000eb2:	fa0b f000 	lsl.w	r0, fp, r0
 8000eb6:	4318      	orrs	r0, r3
 8000eb8:	9004      	str	r0, [sp, #16]
 8000eba:	4645      	mov	r5, r8
 8000ebc:	e7be      	b.n	8000e3c <_vfiprintf_r+0x8c>
 8000ebe:	9a03      	ldr	r2, [sp, #12]
 8000ec0:	1d11      	adds	r1, r2, #4
 8000ec2:	6812      	ldr	r2, [r2, #0]
 8000ec4:	9103      	str	r1, [sp, #12]
 8000ec6:	2a00      	cmp	r2, #0
 8000ec8:	db01      	blt.n	8000ece <_vfiprintf_r+0x11e>
 8000eca:	9207      	str	r2, [sp, #28]
 8000ecc:	e004      	b.n	8000ed8 <_vfiprintf_r+0x128>
 8000ece:	4252      	negs	r2, r2
 8000ed0:	f043 0302 	orr.w	r3, r3, #2
 8000ed4:	9207      	str	r2, [sp, #28]
 8000ed6:	9304      	str	r3, [sp, #16]
 8000ed8:	f898 3000 	ldrb.w	r3, [r8]
 8000edc:	2b2e      	cmp	r3, #46	; 0x2e
 8000ede:	d10e      	bne.n	8000efe <_vfiprintf_r+0x14e>
 8000ee0:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000ee4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ee6:	d138      	bne.n	8000f5a <_vfiprintf_r+0x1aa>
 8000ee8:	9b03      	ldr	r3, [sp, #12]
 8000eea:	1d1a      	adds	r2, r3, #4
 8000eec:	681b      	ldr	r3, [r3, #0]
 8000eee:	9203      	str	r2, [sp, #12]
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	bfb8      	it	lt
 8000ef4:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ef8:	f108 0802 	add.w	r8, r8, #2
 8000efc:	9305      	str	r3, [sp, #20]
 8000efe:	4d33      	ldr	r5, [pc, #204]	; (8000fcc <_vfiprintf_r+0x21c>)
 8000f00:	f898 1000 	ldrb.w	r1, [r8]
 8000f04:	2203      	movs	r2, #3
 8000f06:	4628      	mov	r0, r5
 8000f08:	f7ff f972 	bl	80001f0 <memchr>
 8000f0c:	b140      	cbz	r0, 8000f20 <_vfiprintf_r+0x170>
 8000f0e:	2340      	movs	r3, #64	; 0x40
 8000f10:	1b40      	subs	r0, r0, r5
 8000f12:	fa03 f000 	lsl.w	r0, r3, r0
 8000f16:	9b04      	ldr	r3, [sp, #16]
 8000f18:	4303      	orrs	r3, r0
 8000f1a:	f108 0801 	add.w	r8, r8, #1
 8000f1e:	9304      	str	r3, [sp, #16]
 8000f20:	f898 1000 	ldrb.w	r1, [r8]
 8000f24:	482a      	ldr	r0, [pc, #168]	; (8000fd0 <_vfiprintf_r+0x220>)
 8000f26:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f2a:	2206      	movs	r2, #6
 8000f2c:	f108 0701 	add.w	r7, r8, #1
 8000f30:	f7ff f95e 	bl	80001f0 <memchr>
 8000f34:	2800      	cmp	r0, #0
 8000f36:	d037      	beq.n	8000fa8 <_vfiprintf_r+0x1f8>
 8000f38:	4b26      	ldr	r3, [pc, #152]	; (8000fd4 <_vfiprintf_r+0x224>)
 8000f3a:	bb1b      	cbnz	r3, 8000f84 <_vfiprintf_r+0x1d4>
 8000f3c:	9b03      	ldr	r3, [sp, #12]
 8000f3e:	3307      	adds	r3, #7
 8000f40:	f023 0307 	bic.w	r3, r3, #7
 8000f44:	3308      	adds	r3, #8
 8000f46:	9303      	str	r3, [sp, #12]
 8000f48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f4a:	444b      	add	r3, r9
 8000f4c:	9309      	str	r3, [sp, #36]	; 0x24
 8000f4e:	e750      	b.n	8000df2 <_vfiprintf_r+0x42>
 8000f50:	fb05 3202 	mla	r2, r5, r2, r3
 8000f54:	2001      	movs	r0, #1
 8000f56:	4688      	mov	r8, r1
 8000f58:	e78a      	b.n	8000e70 <_vfiprintf_r+0xc0>
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	f108 0801 	add.w	r8, r8, #1
 8000f60:	9305      	str	r3, [sp, #20]
 8000f62:	4619      	mov	r1, r3
 8000f64:	250a      	movs	r5, #10
 8000f66:	4640      	mov	r0, r8
 8000f68:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f6c:	3a30      	subs	r2, #48	; 0x30
 8000f6e:	2a09      	cmp	r2, #9
 8000f70:	d903      	bls.n	8000f7a <_vfiprintf_r+0x1ca>
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d0c3      	beq.n	8000efe <_vfiprintf_r+0x14e>
 8000f76:	9105      	str	r1, [sp, #20]
 8000f78:	e7c1      	b.n	8000efe <_vfiprintf_r+0x14e>
 8000f7a:	fb05 2101 	mla	r1, r5, r1, r2
 8000f7e:	2301      	movs	r3, #1
 8000f80:	4680      	mov	r8, r0
 8000f82:	e7f0      	b.n	8000f66 <_vfiprintf_r+0x1b6>
 8000f84:	ab03      	add	r3, sp, #12
 8000f86:	9300      	str	r3, [sp, #0]
 8000f88:	4622      	mov	r2, r4
 8000f8a:	4b13      	ldr	r3, [pc, #76]	; (8000fd8 <_vfiprintf_r+0x228>)
 8000f8c:	a904      	add	r1, sp, #16
 8000f8e:	4630      	mov	r0, r6
 8000f90:	f3af 8000 	nop.w
 8000f94:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000f98:	4681      	mov	r9, r0
 8000f9a:	d1d5      	bne.n	8000f48 <_vfiprintf_r+0x198>
 8000f9c:	89a3      	ldrh	r3, [r4, #12]
 8000f9e:	065b      	lsls	r3, r3, #25
 8000fa0:	f53f af7e 	bmi.w	8000ea0 <_vfiprintf_r+0xf0>
 8000fa4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fa6:	e77d      	b.n	8000ea4 <_vfiprintf_r+0xf4>
 8000fa8:	ab03      	add	r3, sp, #12
 8000faa:	9300      	str	r3, [sp, #0]
 8000fac:	4622      	mov	r2, r4
 8000fae:	4b0a      	ldr	r3, [pc, #40]	; (8000fd8 <_vfiprintf_r+0x228>)
 8000fb0:	a904      	add	r1, sp, #16
 8000fb2:	4630      	mov	r0, r6
 8000fb4:	f000 f888 	bl	80010c8 <_printf_i>
 8000fb8:	e7ec      	b.n	8000f94 <_vfiprintf_r+0x1e4>
 8000fba:	bf00      	nop
 8000fbc:	080014d8 	.word	0x080014d8
 8000fc0:	08001518 	.word	0x08001518
 8000fc4:	080014f8 	.word	0x080014f8
 8000fc8:	080014b8 	.word	0x080014b8
 8000fcc:	0800151e 	.word	0x0800151e
 8000fd0:	08001522 	.word	0x08001522
 8000fd4:	00000000 	.word	0x00000000
 8000fd8:	08000d8b 	.word	0x08000d8b

08000fdc <_printf_common>:
 8000fdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fe0:	4691      	mov	r9, r2
 8000fe2:	461f      	mov	r7, r3
 8000fe4:	688a      	ldr	r2, [r1, #8]
 8000fe6:	690b      	ldr	r3, [r1, #16]
 8000fe8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000fec:	4293      	cmp	r3, r2
 8000fee:	bfb8      	it	lt
 8000ff0:	4613      	movlt	r3, r2
 8000ff2:	f8c9 3000 	str.w	r3, [r9]
 8000ff6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ffa:	4606      	mov	r6, r0
 8000ffc:	460c      	mov	r4, r1
 8000ffe:	b112      	cbz	r2, 8001006 <_printf_common+0x2a>
 8001000:	3301      	adds	r3, #1
 8001002:	f8c9 3000 	str.w	r3, [r9]
 8001006:	6823      	ldr	r3, [r4, #0]
 8001008:	0699      	lsls	r1, r3, #26
 800100a:	bf42      	ittt	mi
 800100c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001010:	3302      	addmi	r3, #2
 8001012:	f8c9 3000 	strmi.w	r3, [r9]
 8001016:	6825      	ldr	r5, [r4, #0]
 8001018:	f015 0506 	ands.w	r5, r5, #6
 800101c:	d107      	bne.n	800102e <_printf_common+0x52>
 800101e:	f104 0a19 	add.w	sl, r4, #25
 8001022:	68e3      	ldr	r3, [r4, #12]
 8001024:	f8d9 2000 	ldr.w	r2, [r9]
 8001028:	1a9b      	subs	r3, r3, r2
 800102a:	42ab      	cmp	r3, r5
 800102c:	dc28      	bgt.n	8001080 <_printf_common+0xa4>
 800102e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001032:	6822      	ldr	r2, [r4, #0]
 8001034:	3300      	adds	r3, #0
 8001036:	bf18      	it	ne
 8001038:	2301      	movne	r3, #1
 800103a:	0692      	lsls	r2, r2, #26
 800103c:	d42d      	bmi.n	800109a <_printf_common+0xbe>
 800103e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001042:	4639      	mov	r1, r7
 8001044:	4630      	mov	r0, r6
 8001046:	47c0      	blx	r8
 8001048:	3001      	adds	r0, #1
 800104a:	d020      	beq.n	800108e <_printf_common+0xb2>
 800104c:	6823      	ldr	r3, [r4, #0]
 800104e:	68e5      	ldr	r5, [r4, #12]
 8001050:	f8d9 2000 	ldr.w	r2, [r9]
 8001054:	f003 0306 	and.w	r3, r3, #6
 8001058:	2b04      	cmp	r3, #4
 800105a:	bf08      	it	eq
 800105c:	1aad      	subeq	r5, r5, r2
 800105e:	68a3      	ldr	r3, [r4, #8]
 8001060:	6922      	ldr	r2, [r4, #16]
 8001062:	bf0c      	ite	eq
 8001064:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001068:	2500      	movne	r5, #0
 800106a:	4293      	cmp	r3, r2
 800106c:	bfc4      	itt	gt
 800106e:	1a9b      	subgt	r3, r3, r2
 8001070:	18ed      	addgt	r5, r5, r3
 8001072:	f04f 0900 	mov.w	r9, #0
 8001076:	341a      	adds	r4, #26
 8001078:	454d      	cmp	r5, r9
 800107a:	d11a      	bne.n	80010b2 <_printf_common+0xd6>
 800107c:	2000      	movs	r0, #0
 800107e:	e008      	b.n	8001092 <_printf_common+0xb6>
 8001080:	2301      	movs	r3, #1
 8001082:	4652      	mov	r2, sl
 8001084:	4639      	mov	r1, r7
 8001086:	4630      	mov	r0, r6
 8001088:	47c0      	blx	r8
 800108a:	3001      	adds	r0, #1
 800108c:	d103      	bne.n	8001096 <_printf_common+0xba>
 800108e:	f04f 30ff 	mov.w	r0, #4294967295
 8001092:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001096:	3501      	adds	r5, #1
 8001098:	e7c3      	b.n	8001022 <_printf_common+0x46>
 800109a:	18e1      	adds	r1, r4, r3
 800109c:	1c5a      	adds	r2, r3, #1
 800109e:	2030      	movs	r0, #48	; 0x30
 80010a0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010a4:	4422      	add	r2, r4
 80010a6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010aa:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010ae:	3302      	adds	r3, #2
 80010b0:	e7c5      	b.n	800103e <_printf_common+0x62>
 80010b2:	2301      	movs	r3, #1
 80010b4:	4622      	mov	r2, r4
 80010b6:	4639      	mov	r1, r7
 80010b8:	4630      	mov	r0, r6
 80010ba:	47c0      	blx	r8
 80010bc:	3001      	adds	r0, #1
 80010be:	d0e6      	beq.n	800108e <_printf_common+0xb2>
 80010c0:	f109 0901 	add.w	r9, r9, #1
 80010c4:	e7d8      	b.n	8001078 <_printf_common+0x9c>
	...

080010c8 <_printf_i>:
 80010c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80010cc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80010d0:	460c      	mov	r4, r1
 80010d2:	7e09      	ldrb	r1, [r1, #24]
 80010d4:	b085      	sub	sp, #20
 80010d6:	296e      	cmp	r1, #110	; 0x6e
 80010d8:	4617      	mov	r7, r2
 80010da:	4606      	mov	r6, r0
 80010dc:	4698      	mov	r8, r3
 80010de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80010e0:	f000 80b3 	beq.w	800124a <_printf_i+0x182>
 80010e4:	d822      	bhi.n	800112c <_printf_i+0x64>
 80010e6:	2963      	cmp	r1, #99	; 0x63
 80010e8:	d036      	beq.n	8001158 <_printf_i+0x90>
 80010ea:	d80a      	bhi.n	8001102 <_printf_i+0x3a>
 80010ec:	2900      	cmp	r1, #0
 80010ee:	f000 80b9 	beq.w	8001264 <_printf_i+0x19c>
 80010f2:	2958      	cmp	r1, #88	; 0x58
 80010f4:	f000 8083 	beq.w	80011fe <_printf_i+0x136>
 80010f8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010fc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001100:	e032      	b.n	8001168 <_printf_i+0xa0>
 8001102:	2964      	cmp	r1, #100	; 0x64
 8001104:	d001      	beq.n	800110a <_printf_i+0x42>
 8001106:	2969      	cmp	r1, #105	; 0x69
 8001108:	d1f6      	bne.n	80010f8 <_printf_i+0x30>
 800110a:	6820      	ldr	r0, [r4, #0]
 800110c:	6813      	ldr	r3, [r2, #0]
 800110e:	0605      	lsls	r5, r0, #24
 8001110:	f103 0104 	add.w	r1, r3, #4
 8001114:	d52a      	bpl.n	800116c <_printf_i+0xa4>
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	6011      	str	r1, [r2, #0]
 800111a:	2b00      	cmp	r3, #0
 800111c:	da03      	bge.n	8001126 <_printf_i+0x5e>
 800111e:	222d      	movs	r2, #45	; 0x2d
 8001120:	425b      	negs	r3, r3
 8001122:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001126:	486f      	ldr	r0, [pc, #444]	; (80012e4 <_printf_i+0x21c>)
 8001128:	220a      	movs	r2, #10
 800112a:	e039      	b.n	80011a0 <_printf_i+0xd8>
 800112c:	2973      	cmp	r1, #115	; 0x73
 800112e:	f000 809d 	beq.w	800126c <_printf_i+0x1a4>
 8001132:	d808      	bhi.n	8001146 <_printf_i+0x7e>
 8001134:	296f      	cmp	r1, #111	; 0x6f
 8001136:	d020      	beq.n	800117a <_printf_i+0xb2>
 8001138:	2970      	cmp	r1, #112	; 0x70
 800113a:	d1dd      	bne.n	80010f8 <_printf_i+0x30>
 800113c:	6823      	ldr	r3, [r4, #0]
 800113e:	f043 0320 	orr.w	r3, r3, #32
 8001142:	6023      	str	r3, [r4, #0]
 8001144:	e003      	b.n	800114e <_printf_i+0x86>
 8001146:	2975      	cmp	r1, #117	; 0x75
 8001148:	d017      	beq.n	800117a <_printf_i+0xb2>
 800114a:	2978      	cmp	r1, #120	; 0x78
 800114c:	d1d4      	bne.n	80010f8 <_printf_i+0x30>
 800114e:	2378      	movs	r3, #120	; 0x78
 8001150:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001154:	4864      	ldr	r0, [pc, #400]	; (80012e8 <_printf_i+0x220>)
 8001156:	e055      	b.n	8001204 <_printf_i+0x13c>
 8001158:	6813      	ldr	r3, [r2, #0]
 800115a:	1d19      	adds	r1, r3, #4
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	6011      	str	r1, [r2, #0]
 8001160:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001164:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001168:	2301      	movs	r3, #1
 800116a:	e08c      	b.n	8001286 <_printf_i+0x1be>
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	6011      	str	r1, [r2, #0]
 8001170:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001174:	bf18      	it	ne
 8001176:	b21b      	sxthne	r3, r3
 8001178:	e7cf      	b.n	800111a <_printf_i+0x52>
 800117a:	6813      	ldr	r3, [r2, #0]
 800117c:	6825      	ldr	r5, [r4, #0]
 800117e:	1d18      	adds	r0, r3, #4
 8001180:	6010      	str	r0, [r2, #0]
 8001182:	0628      	lsls	r0, r5, #24
 8001184:	d501      	bpl.n	800118a <_printf_i+0xc2>
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	e002      	b.n	8001190 <_printf_i+0xc8>
 800118a:	0668      	lsls	r0, r5, #25
 800118c:	d5fb      	bpl.n	8001186 <_printf_i+0xbe>
 800118e:	881b      	ldrh	r3, [r3, #0]
 8001190:	4854      	ldr	r0, [pc, #336]	; (80012e4 <_printf_i+0x21c>)
 8001192:	296f      	cmp	r1, #111	; 0x6f
 8001194:	bf14      	ite	ne
 8001196:	220a      	movne	r2, #10
 8001198:	2208      	moveq	r2, #8
 800119a:	2100      	movs	r1, #0
 800119c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011a0:	6865      	ldr	r5, [r4, #4]
 80011a2:	60a5      	str	r5, [r4, #8]
 80011a4:	2d00      	cmp	r5, #0
 80011a6:	f2c0 8095 	blt.w	80012d4 <_printf_i+0x20c>
 80011aa:	6821      	ldr	r1, [r4, #0]
 80011ac:	f021 0104 	bic.w	r1, r1, #4
 80011b0:	6021      	str	r1, [r4, #0]
 80011b2:	2b00      	cmp	r3, #0
 80011b4:	d13d      	bne.n	8001232 <_printf_i+0x16a>
 80011b6:	2d00      	cmp	r5, #0
 80011b8:	f040 808e 	bne.w	80012d8 <_printf_i+0x210>
 80011bc:	4665      	mov	r5, ip
 80011be:	2a08      	cmp	r2, #8
 80011c0:	d10b      	bne.n	80011da <_printf_i+0x112>
 80011c2:	6823      	ldr	r3, [r4, #0]
 80011c4:	07db      	lsls	r3, r3, #31
 80011c6:	d508      	bpl.n	80011da <_printf_i+0x112>
 80011c8:	6923      	ldr	r3, [r4, #16]
 80011ca:	6862      	ldr	r2, [r4, #4]
 80011cc:	429a      	cmp	r2, r3
 80011ce:	bfde      	ittt	le
 80011d0:	2330      	movle	r3, #48	; 0x30
 80011d2:	f805 3c01 	strble.w	r3, [r5, #-1]
 80011d6:	f105 35ff 	addle.w	r5, r5, #4294967295
 80011da:	ebac 0305 	sub.w	r3, ip, r5
 80011de:	6123      	str	r3, [r4, #16]
 80011e0:	f8cd 8000 	str.w	r8, [sp]
 80011e4:	463b      	mov	r3, r7
 80011e6:	aa03      	add	r2, sp, #12
 80011e8:	4621      	mov	r1, r4
 80011ea:	4630      	mov	r0, r6
 80011ec:	f7ff fef6 	bl	8000fdc <_printf_common>
 80011f0:	3001      	adds	r0, #1
 80011f2:	d14d      	bne.n	8001290 <_printf_i+0x1c8>
 80011f4:	f04f 30ff 	mov.w	r0, #4294967295
 80011f8:	b005      	add	sp, #20
 80011fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80011fe:	4839      	ldr	r0, [pc, #228]	; (80012e4 <_printf_i+0x21c>)
 8001200:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001204:	6813      	ldr	r3, [r2, #0]
 8001206:	6821      	ldr	r1, [r4, #0]
 8001208:	1d1d      	adds	r5, r3, #4
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	6015      	str	r5, [r2, #0]
 800120e:	060a      	lsls	r2, r1, #24
 8001210:	d50b      	bpl.n	800122a <_printf_i+0x162>
 8001212:	07ca      	lsls	r2, r1, #31
 8001214:	bf44      	itt	mi
 8001216:	f041 0120 	orrmi.w	r1, r1, #32
 800121a:	6021      	strmi	r1, [r4, #0]
 800121c:	b91b      	cbnz	r3, 8001226 <_printf_i+0x15e>
 800121e:	6822      	ldr	r2, [r4, #0]
 8001220:	f022 0220 	bic.w	r2, r2, #32
 8001224:	6022      	str	r2, [r4, #0]
 8001226:	2210      	movs	r2, #16
 8001228:	e7b7      	b.n	800119a <_printf_i+0xd2>
 800122a:	064d      	lsls	r5, r1, #25
 800122c:	bf48      	it	mi
 800122e:	b29b      	uxthmi	r3, r3
 8001230:	e7ef      	b.n	8001212 <_printf_i+0x14a>
 8001232:	4665      	mov	r5, ip
 8001234:	fbb3 f1f2 	udiv	r1, r3, r2
 8001238:	fb02 3311 	mls	r3, r2, r1, r3
 800123c:	5cc3      	ldrb	r3, [r0, r3]
 800123e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001242:	460b      	mov	r3, r1
 8001244:	2900      	cmp	r1, #0
 8001246:	d1f5      	bne.n	8001234 <_printf_i+0x16c>
 8001248:	e7b9      	b.n	80011be <_printf_i+0xf6>
 800124a:	6813      	ldr	r3, [r2, #0]
 800124c:	6825      	ldr	r5, [r4, #0]
 800124e:	6961      	ldr	r1, [r4, #20]
 8001250:	1d18      	adds	r0, r3, #4
 8001252:	6010      	str	r0, [r2, #0]
 8001254:	0628      	lsls	r0, r5, #24
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	d501      	bpl.n	800125e <_printf_i+0x196>
 800125a:	6019      	str	r1, [r3, #0]
 800125c:	e002      	b.n	8001264 <_printf_i+0x19c>
 800125e:	066a      	lsls	r2, r5, #25
 8001260:	d5fb      	bpl.n	800125a <_printf_i+0x192>
 8001262:	8019      	strh	r1, [r3, #0]
 8001264:	2300      	movs	r3, #0
 8001266:	6123      	str	r3, [r4, #16]
 8001268:	4665      	mov	r5, ip
 800126a:	e7b9      	b.n	80011e0 <_printf_i+0x118>
 800126c:	6813      	ldr	r3, [r2, #0]
 800126e:	1d19      	adds	r1, r3, #4
 8001270:	6011      	str	r1, [r2, #0]
 8001272:	681d      	ldr	r5, [r3, #0]
 8001274:	6862      	ldr	r2, [r4, #4]
 8001276:	2100      	movs	r1, #0
 8001278:	4628      	mov	r0, r5
 800127a:	f7fe ffb9 	bl	80001f0 <memchr>
 800127e:	b108      	cbz	r0, 8001284 <_printf_i+0x1bc>
 8001280:	1b40      	subs	r0, r0, r5
 8001282:	6060      	str	r0, [r4, #4]
 8001284:	6863      	ldr	r3, [r4, #4]
 8001286:	6123      	str	r3, [r4, #16]
 8001288:	2300      	movs	r3, #0
 800128a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800128e:	e7a7      	b.n	80011e0 <_printf_i+0x118>
 8001290:	6923      	ldr	r3, [r4, #16]
 8001292:	462a      	mov	r2, r5
 8001294:	4639      	mov	r1, r7
 8001296:	4630      	mov	r0, r6
 8001298:	47c0      	blx	r8
 800129a:	3001      	adds	r0, #1
 800129c:	d0aa      	beq.n	80011f4 <_printf_i+0x12c>
 800129e:	6823      	ldr	r3, [r4, #0]
 80012a0:	079b      	lsls	r3, r3, #30
 80012a2:	d413      	bmi.n	80012cc <_printf_i+0x204>
 80012a4:	68e0      	ldr	r0, [r4, #12]
 80012a6:	9b03      	ldr	r3, [sp, #12]
 80012a8:	4298      	cmp	r0, r3
 80012aa:	bfb8      	it	lt
 80012ac:	4618      	movlt	r0, r3
 80012ae:	e7a3      	b.n	80011f8 <_printf_i+0x130>
 80012b0:	2301      	movs	r3, #1
 80012b2:	464a      	mov	r2, r9
 80012b4:	4639      	mov	r1, r7
 80012b6:	4630      	mov	r0, r6
 80012b8:	47c0      	blx	r8
 80012ba:	3001      	adds	r0, #1
 80012bc:	d09a      	beq.n	80011f4 <_printf_i+0x12c>
 80012be:	3501      	adds	r5, #1
 80012c0:	68e3      	ldr	r3, [r4, #12]
 80012c2:	9a03      	ldr	r2, [sp, #12]
 80012c4:	1a9b      	subs	r3, r3, r2
 80012c6:	42ab      	cmp	r3, r5
 80012c8:	dcf2      	bgt.n	80012b0 <_printf_i+0x1e8>
 80012ca:	e7eb      	b.n	80012a4 <_printf_i+0x1dc>
 80012cc:	2500      	movs	r5, #0
 80012ce:	f104 0919 	add.w	r9, r4, #25
 80012d2:	e7f5      	b.n	80012c0 <_printf_i+0x1f8>
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	d1ac      	bne.n	8001232 <_printf_i+0x16a>
 80012d8:	7803      	ldrb	r3, [r0, #0]
 80012da:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80012de:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012e2:	e76c      	b.n	80011be <_printf_i+0xf6>
 80012e4:	08001529 	.word	0x08001529
 80012e8:	0800153a 	.word	0x0800153a

080012ec <_sbrk_r>:
 80012ec:	b538      	push	{r3, r4, r5, lr}
 80012ee:	4c06      	ldr	r4, [pc, #24]	; (8001308 <_sbrk_r+0x1c>)
 80012f0:	2300      	movs	r3, #0
 80012f2:	4605      	mov	r5, r0
 80012f4:	4608      	mov	r0, r1
 80012f6:	6023      	str	r3, [r4, #0]
 80012f8:	f7ff f8dc 	bl	80004b4 <_sbrk>
 80012fc:	1c43      	adds	r3, r0, #1
 80012fe:	d102      	bne.n	8001306 <_sbrk_r+0x1a>
 8001300:	6823      	ldr	r3, [r4, #0]
 8001302:	b103      	cbz	r3, 8001306 <_sbrk_r+0x1a>
 8001304:	602b      	str	r3, [r5, #0]
 8001306:	bd38      	pop	{r3, r4, r5, pc}
 8001308:	2000008c 	.word	0x2000008c

0800130c <__sread>:
 800130c:	b510      	push	{r4, lr}
 800130e:	460c      	mov	r4, r1
 8001310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001314:	f000 f896 	bl	8001444 <_read_r>
 8001318:	2800      	cmp	r0, #0
 800131a:	bfab      	itete	ge
 800131c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800131e:	89a3      	ldrhlt	r3, [r4, #12]
 8001320:	181b      	addge	r3, r3, r0
 8001322:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001326:	bfac      	ite	ge
 8001328:	6563      	strge	r3, [r4, #84]	; 0x54
 800132a:	81a3      	strhlt	r3, [r4, #12]
 800132c:	bd10      	pop	{r4, pc}

0800132e <__swrite>:
 800132e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001332:	461f      	mov	r7, r3
 8001334:	898b      	ldrh	r3, [r1, #12]
 8001336:	05db      	lsls	r3, r3, #23
 8001338:	4605      	mov	r5, r0
 800133a:	460c      	mov	r4, r1
 800133c:	4616      	mov	r6, r2
 800133e:	d505      	bpl.n	800134c <__swrite+0x1e>
 8001340:	2302      	movs	r3, #2
 8001342:	2200      	movs	r2, #0
 8001344:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001348:	f000 f868 	bl	800141c <_lseek_r>
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001352:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	4632      	mov	r2, r6
 800135a:	463b      	mov	r3, r7
 800135c:	4628      	mov	r0, r5
 800135e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001362:	f000 b817 	b.w	8001394 <_write_r>

08001366 <__sseek>:
 8001366:	b510      	push	{r4, lr}
 8001368:	460c      	mov	r4, r1
 800136a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800136e:	f000 f855 	bl	800141c <_lseek_r>
 8001372:	1c43      	adds	r3, r0, #1
 8001374:	89a3      	ldrh	r3, [r4, #12]
 8001376:	bf15      	itete	ne
 8001378:	6560      	strne	r0, [r4, #84]	; 0x54
 800137a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800137e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001382:	81a3      	strheq	r3, [r4, #12]
 8001384:	bf18      	it	ne
 8001386:	81a3      	strhne	r3, [r4, #12]
 8001388:	bd10      	pop	{r4, pc}

0800138a <__sclose>:
 800138a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800138e:	f000 b813 	b.w	80013b8 <_close_r>
	...

08001394 <_write_r>:
 8001394:	b538      	push	{r3, r4, r5, lr}
 8001396:	4c07      	ldr	r4, [pc, #28]	; (80013b4 <_write_r+0x20>)
 8001398:	4605      	mov	r5, r0
 800139a:	4608      	mov	r0, r1
 800139c:	4611      	mov	r1, r2
 800139e:	2200      	movs	r2, #0
 80013a0:	6022      	str	r2, [r4, #0]
 80013a2:	461a      	mov	r2, r3
 80013a4:	f7ff f835 	bl	8000412 <_write>
 80013a8:	1c43      	adds	r3, r0, #1
 80013aa:	d102      	bne.n	80013b2 <_write_r+0x1e>
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	b103      	cbz	r3, 80013b2 <_write_r+0x1e>
 80013b0:	602b      	str	r3, [r5, #0]
 80013b2:	bd38      	pop	{r3, r4, r5, pc}
 80013b4:	2000008c 	.word	0x2000008c

080013b8 <_close_r>:
 80013b8:	b538      	push	{r3, r4, r5, lr}
 80013ba:	4c06      	ldr	r4, [pc, #24]	; (80013d4 <_close_r+0x1c>)
 80013bc:	2300      	movs	r3, #0
 80013be:	4605      	mov	r5, r0
 80013c0:	4608      	mov	r0, r1
 80013c2:	6023      	str	r3, [r4, #0]
 80013c4:	f7ff f841 	bl	800044a <_close>
 80013c8:	1c43      	adds	r3, r0, #1
 80013ca:	d102      	bne.n	80013d2 <_close_r+0x1a>
 80013cc:	6823      	ldr	r3, [r4, #0]
 80013ce:	b103      	cbz	r3, 80013d2 <_close_r+0x1a>
 80013d0:	602b      	str	r3, [r5, #0]
 80013d2:	bd38      	pop	{r3, r4, r5, pc}
 80013d4:	2000008c 	.word	0x2000008c

080013d8 <_fstat_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4c07      	ldr	r4, [pc, #28]	; (80013f8 <_fstat_r+0x20>)
 80013dc:	2300      	movs	r3, #0
 80013de:	4605      	mov	r5, r0
 80013e0:	4608      	mov	r0, r1
 80013e2:	4611      	mov	r1, r2
 80013e4:	6023      	str	r3, [r4, #0]
 80013e6:	f7ff f83c 	bl	8000462 <_fstat>
 80013ea:	1c43      	adds	r3, r0, #1
 80013ec:	d102      	bne.n	80013f4 <_fstat_r+0x1c>
 80013ee:	6823      	ldr	r3, [r4, #0]
 80013f0:	b103      	cbz	r3, 80013f4 <_fstat_r+0x1c>
 80013f2:	602b      	str	r3, [r5, #0]
 80013f4:	bd38      	pop	{r3, r4, r5, pc}
 80013f6:	bf00      	nop
 80013f8:	2000008c 	.word	0x2000008c

080013fc <_isatty_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4c06      	ldr	r4, [pc, #24]	; (8001418 <_isatty_r+0x1c>)
 8001400:	2300      	movs	r3, #0
 8001402:	4605      	mov	r5, r0
 8001404:	4608      	mov	r0, r1
 8001406:	6023      	str	r3, [r4, #0]
 8001408:	f7ff f83b 	bl	8000482 <_isatty>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_isatty_r+0x1a>
 8001410:	6823      	ldr	r3, [r4, #0]
 8001412:	b103      	cbz	r3, 8001416 <_isatty_r+0x1a>
 8001414:	602b      	str	r3, [r5, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	2000008c 	.word	0x2000008c

0800141c <_lseek_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4c07      	ldr	r4, [pc, #28]	; (800143c <_lseek_r+0x20>)
 8001420:	4605      	mov	r5, r0
 8001422:	4608      	mov	r0, r1
 8001424:	4611      	mov	r1, r2
 8001426:	2200      	movs	r2, #0
 8001428:	6022      	str	r2, [r4, #0]
 800142a:	461a      	mov	r2, r3
 800142c:	f7ff f834 	bl	8000498 <_lseek>
 8001430:	1c43      	adds	r3, r0, #1
 8001432:	d102      	bne.n	800143a <_lseek_r+0x1e>
 8001434:	6823      	ldr	r3, [r4, #0]
 8001436:	b103      	cbz	r3, 800143a <_lseek_r+0x1e>
 8001438:	602b      	str	r3, [r5, #0]
 800143a:	bd38      	pop	{r3, r4, r5, pc}
 800143c:	2000008c 	.word	0x2000008c

08001440 <__malloc_lock>:
 8001440:	4770      	bx	lr

08001442 <__malloc_unlock>:
 8001442:	4770      	bx	lr

08001444 <_read_r>:
 8001444:	b538      	push	{r3, r4, r5, lr}
 8001446:	4c07      	ldr	r4, [pc, #28]	; (8001464 <_read_r+0x20>)
 8001448:	4605      	mov	r5, r0
 800144a:	4608      	mov	r0, r1
 800144c:	4611      	mov	r1, r2
 800144e:	2200      	movs	r2, #0
 8001450:	6022      	str	r2, [r4, #0]
 8001452:	461a      	mov	r2, r3
 8001454:	f7fe ffc0 	bl	80003d8 <_read>
 8001458:	1c43      	adds	r3, r0, #1
 800145a:	d102      	bne.n	8001462 <_read_r+0x1e>
 800145c:	6823      	ldr	r3, [r4, #0]
 800145e:	b103      	cbz	r3, 8001462 <_read_r+0x1e>
 8001460:	602b      	str	r3, [r5, #0]
 8001462:	bd38      	pop	{r3, r4, r5, pc}
 8001464:	2000008c 	.word	0x2000008c

08001468 <_init>:
 8001468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800146a:	bf00      	nop
 800146c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800146e:	bc08      	pop	{r3}
 8001470:	469e      	mov	lr, r3
 8001472:	4770      	bx	lr

08001474 <_fini>:
 8001474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001476:	bf00      	nop
 8001478:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800147a:	bc08      	pop	{r3}
 800147c:	469e      	mov	lr, r3
 800147e:	4770      	bx	lr
