
001_HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b88  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000d30  08000d30  00010d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000da0  08000da0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000da0  08000da0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000da0  08000da0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000da0  08000da0  00010da0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000da4  08000da4  00010da4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000da8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000e0c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000e0c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002142  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000058b  00000000  00000000  000221d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00022768  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00022880  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000029aa  00000000  00000000  00022960  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000011dc  00000000  00000000  0002530a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090f2  00000000  00000000  000264e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f5d8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000924  00000000  00000000  0002f654  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000064 	.word	0x20000064
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000d18 	.word	0x08000d18

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000068 	.word	0x20000068
 80001e4:	08000d18 	.word	0x08000d18

080001e8 <main>:
 */

#include <stdio.h>

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
    /* Loop forever */

	printf("Hello World\n");
 80001ec:	4801      	ldr	r0, [pc, #4]	; (80001f4 <main+0xc>)
 80001ee:	f000 f987 	bl	8000500 <puts>
	for(;;);
 80001f2:	e7fe      	b.n	80001f2 <main+0xa>
 80001f4:	08000d30 	.word	0x08000d30

080001f8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001f8:	b480      	push	{r7}
 80001fa:	b083      	sub	sp, #12
 80001fc:	af00      	add	r7, sp, #0
 80001fe:	4603      	mov	r3, r0
 8000200:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000202:	4b0f      	ldr	r3, [pc, #60]	; (8000240 <ITM_SendChar+0x48>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	4a0e      	ldr	r2, [pc, #56]	; (8000240 <ITM_SendChar+0x48>)
 8000208:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800020c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800020e:	4b0d      	ldr	r3, [pc, #52]	; (8000244 <ITM_SendChar+0x4c>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	4a0c      	ldr	r2, [pc, #48]	; (8000244 <ITM_SendChar+0x4c>)
 8000214:	f043 0301 	orr.w	r3, r3, #1
 8000218:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800021a:	bf00      	nop
 800021c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f003 0301 	and.w	r3, r3, #1
 8000226:	2b00      	cmp	r3, #0
 8000228:	d0f8      	beq.n	800021c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800022a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800022e:	79fb      	ldrb	r3, [r7, #7]
 8000230:	6013      	str	r3, [r2, #0]
}
 8000232:	bf00      	nop
 8000234:	370c      	adds	r7, #12
 8000236:	46bd      	mov	sp, r7
 8000238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	e000edfc 	.word	0xe000edfc
 8000244:	e0000e00 	.word	0xe0000e00

08000248 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000248:	b580      	push	{r7, lr}
 800024a:	b086      	sub	sp, #24
 800024c:	af00      	add	r7, sp, #0
 800024e:	60f8      	str	r0, [r7, #12]
 8000250:	60b9      	str	r1, [r7, #8]
 8000252:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000254:	2300      	movs	r3, #0
 8000256:	617b      	str	r3, [r7, #20]
 8000258:	e00a      	b.n	8000270 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800025a:	f3af 8000 	nop.w
 800025e:	4601      	mov	r1, r0
 8000260:	68bb      	ldr	r3, [r7, #8]
 8000262:	1c5a      	adds	r2, r3, #1
 8000264:	60ba      	str	r2, [r7, #8]
 8000266:	b2ca      	uxtb	r2, r1
 8000268:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800026a:	697b      	ldr	r3, [r7, #20]
 800026c:	3301      	adds	r3, #1
 800026e:	617b      	str	r3, [r7, #20]
 8000270:	697a      	ldr	r2, [r7, #20]
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	429a      	cmp	r2, r3
 8000276:	dbf0      	blt.n	800025a <_read+0x12>
	}

return len;
 8000278:	687b      	ldr	r3, [r7, #4]
}
 800027a:	4618      	mov	r0, r3
 800027c:	3718      	adds	r7, #24
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}

08000282 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000282:	b580      	push	{r7, lr}
 8000284:	b086      	sub	sp, #24
 8000286:	af00      	add	r7, sp, #0
 8000288:	60f8      	str	r0, [r7, #12]
 800028a:	60b9      	str	r1, [r7, #8]
 800028c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800028e:	2300      	movs	r3, #0
 8000290:	617b      	str	r3, [r7, #20]
 8000292:	e009      	b.n	80002a8 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000294:	68bb      	ldr	r3, [r7, #8]
 8000296:	1c5a      	adds	r2, r3, #1
 8000298:	60ba      	str	r2, [r7, #8]
 800029a:	781b      	ldrb	r3, [r3, #0]
 800029c:	4618      	mov	r0, r3
 800029e:	f7ff ffab 	bl	80001f8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a2:	697b      	ldr	r3, [r7, #20]
 80002a4:	3301      	adds	r3, #1
 80002a6:	617b      	str	r3, [r7, #20]
 80002a8:	697a      	ldr	r2, [r7, #20]
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	429a      	cmp	r2, r3
 80002ae:	dbf1      	blt.n	8000294 <_write+0x12>
	}
	return len;
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	3718      	adds	r7, #24
 80002b6:	46bd      	mov	sp, r7
 80002b8:	bd80      	pop	{r7, pc}

080002ba <_close>:

int _close(int file)
{
 80002ba:	b480      	push	{r7}
 80002bc:	b083      	sub	sp, #12
 80002be:	af00      	add	r7, sp, #0
 80002c0:	6078      	str	r0, [r7, #4]
	return -1;
 80002c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002c6:	4618      	mov	r0, r3
 80002c8:	370c      	adds	r7, #12
 80002ca:	46bd      	mov	sp, r7
 80002cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d0:	4770      	bx	lr

080002d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002d2:	b480      	push	{r7}
 80002d4:	b083      	sub	sp, #12
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	6078      	str	r0, [r7, #4]
 80002da:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002dc:	683b      	ldr	r3, [r7, #0]
 80002de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002e2:	605a      	str	r2, [r3, #4]
	return 0;
 80002e4:	2300      	movs	r3, #0
}
 80002e6:	4618      	mov	r0, r3
 80002e8:	370c      	adds	r7, #12
 80002ea:	46bd      	mov	sp, r7
 80002ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f0:	4770      	bx	lr

080002f2 <_isatty>:

int _isatty(int file)
{
 80002f2:	b480      	push	{r7}
 80002f4:	b083      	sub	sp, #12
 80002f6:	af00      	add	r7, sp, #0
 80002f8:	6078      	str	r0, [r7, #4]
	return 1;
 80002fa:	2301      	movs	r3, #1
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	370c      	adds	r7, #12
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr

08000308 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000308:	b480      	push	{r7}
 800030a:	b085      	sub	sp, #20
 800030c:	af00      	add	r7, sp, #0
 800030e:	60f8      	str	r0, [r7, #12]
 8000310:	60b9      	str	r1, [r7, #8]
 8000312:	607a      	str	r2, [r7, #4]
	return 0;
 8000314:	2300      	movs	r3, #0
}
 8000316:	4618      	mov	r0, r3
 8000318:	3714      	adds	r7, #20
 800031a:	46bd      	mov	sp, r7
 800031c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000320:	4770      	bx	lr
	...

08000324 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b086      	sub	sp, #24
 8000328:	af00      	add	r7, sp, #0
 800032a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800032c:	4a14      	ldr	r2, [pc, #80]	; (8000380 <_sbrk+0x5c>)
 800032e:	4b15      	ldr	r3, [pc, #84]	; (8000384 <_sbrk+0x60>)
 8000330:	1ad3      	subs	r3, r2, r3
 8000332:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000334:	697b      	ldr	r3, [r7, #20]
 8000336:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000338:	4b13      	ldr	r3, [pc, #76]	; (8000388 <_sbrk+0x64>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	2b00      	cmp	r3, #0
 800033e:	d102      	bne.n	8000346 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000340:	4b11      	ldr	r3, [pc, #68]	; (8000388 <_sbrk+0x64>)
 8000342:	4a12      	ldr	r2, [pc, #72]	; (800038c <_sbrk+0x68>)
 8000344:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000346:	4b10      	ldr	r3, [pc, #64]	; (8000388 <_sbrk+0x64>)
 8000348:	681a      	ldr	r2, [r3, #0]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4413      	add	r3, r2
 800034e:	693a      	ldr	r2, [r7, #16]
 8000350:	429a      	cmp	r2, r3
 8000352:	d207      	bcs.n	8000364 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000354:	f000 f846 	bl	80003e4 <__errno>
 8000358:	4602      	mov	r2, r0
 800035a:	230c      	movs	r3, #12
 800035c:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800035e:	f04f 33ff 	mov.w	r3, #4294967295
 8000362:	e009      	b.n	8000378 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000364:	4b08      	ldr	r3, [pc, #32]	; (8000388 <_sbrk+0x64>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800036a:	4b07      	ldr	r3, [pc, #28]	; (8000388 <_sbrk+0x64>)
 800036c:	681a      	ldr	r2, [r3, #0]
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4413      	add	r3, r2
 8000372:	4a05      	ldr	r2, [pc, #20]	; (8000388 <_sbrk+0x64>)
 8000374:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000376:	68fb      	ldr	r3, [r7, #12]
}
 8000378:	4618      	mov	r0, r3
 800037a:	3718      	adds	r7, #24
 800037c:	46bd      	mov	sp, r7
 800037e:	bd80      	pop	{r7, pc}
 8000380:	20020000 	.word	0x20020000
 8000384:	00000400 	.word	0x00000400
 8000388:	20000080 	.word	0x20000080
 800038c:	20000090 	.word	0x20000090

08000390 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000390:	480d      	ldr	r0, [pc, #52]	; (80003c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000392:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000394:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000398:	480c      	ldr	r0, [pc, #48]	; (80003cc <LoopForever+0x6>)
  ldr r1, =_edata
 800039a:	490d      	ldr	r1, [pc, #52]	; (80003d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800039c:	4a0d      	ldr	r2, [pc, #52]	; (80003d4 <LoopForever+0xe>)
  movs r3, #0
 800039e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003a0:	e002      	b.n	80003a8 <LoopCopyDataInit>

080003a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003a6:	3304      	adds	r3, #4

080003a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003ac:	d3f9      	bcc.n	80003a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ae:	4a0a      	ldr	r2, [pc, #40]	; (80003d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003b0:	4c0a      	ldr	r4, [pc, #40]	; (80003dc <LoopForever+0x16>)
  movs r3, #0
 80003b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003b4:	e001      	b.n	80003ba <LoopFillZerobss>

080003b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b8:	3204      	adds	r2, #4

080003ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003bc:	d3fb      	bcc.n	80003b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003be:	f000 f817 	bl	80003f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003c2:	f7ff ff11 	bl	80001e8 <main>

080003c6 <LoopForever>:

LoopForever:
    b LoopForever
 80003c6:	e7fe      	b.n	80003c6 <LoopForever>
  ldr   r0, =_estack
 80003c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003d0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003d4:	08000da8 	.word	0x08000da8
  ldr r2, =_sbss
 80003d8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003dc:	20000090 	.word	0x20000090

080003e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003e0:	e7fe      	b.n	80003e0 <ADC_IRQHandler>
	...

080003e4 <__errno>:
 80003e4:	4b01      	ldr	r3, [pc, #4]	; (80003ec <__errno+0x8>)
 80003e6:	6818      	ldr	r0, [r3, #0]
 80003e8:	4770      	bx	lr
 80003ea:	bf00      	nop
 80003ec:	20000000 	.word	0x20000000

080003f0 <__libc_init_array>:
 80003f0:	b570      	push	{r4, r5, r6, lr}
 80003f2:	4e0d      	ldr	r6, [pc, #52]	; (8000428 <__libc_init_array+0x38>)
 80003f4:	4c0d      	ldr	r4, [pc, #52]	; (800042c <__libc_init_array+0x3c>)
 80003f6:	1ba4      	subs	r4, r4, r6
 80003f8:	10a4      	asrs	r4, r4, #2
 80003fa:	2500      	movs	r5, #0
 80003fc:	42a5      	cmp	r5, r4
 80003fe:	d109      	bne.n	8000414 <__libc_init_array+0x24>
 8000400:	4e0b      	ldr	r6, [pc, #44]	; (8000430 <__libc_init_array+0x40>)
 8000402:	4c0c      	ldr	r4, [pc, #48]	; (8000434 <__libc_init_array+0x44>)
 8000404:	f000 fc88 	bl	8000d18 <_init>
 8000408:	1ba4      	subs	r4, r4, r6
 800040a:	10a4      	asrs	r4, r4, #2
 800040c:	2500      	movs	r5, #0
 800040e:	42a5      	cmp	r5, r4
 8000410:	d105      	bne.n	800041e <__libc_init_array+0x2e>
 8000412:	bd70      	pop	{r4, r5, r6, pc}
 8000414:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000418:	4798      	blx	r3
 800041a:	3501      	adds	r5, #1
 800041c:	e7ee      	b.n	80003fc <__libc_init_array+0xc>
 800041e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000422:	4798      	blx	r3
 8000424:	3501      	adds	r5, #1
 8000426:	e7f2      	b.n	800040e <__libc_init_array+0x1e>
 8000428:	08000da0 	.word	0x08000da0
 800042c:	08000da0 	.word	0x08000da0
 8000430:	08000da0 	.word	0x08000da0
 8000434:	08000da4 	.word	0x08000da4

08000438 <memset>:
 8000438:	4402      	add	r2, r0
 800043a:	4603      	mov	r3, r0
 800043c:	4293      	cmp	r3, r2
 800043e:	d100      	bne.n	8000442 <memset+0xa>
 8000440:	4770      	bx	lr
 8000442:	f803 1b01 	strb.w	r1, [r3], #1
 8000446:	e7f9      	b.n	800043c <memset+0x4>

08000448 <_puts_r>:
 8000448:	b570      	push	{r4, r5, r6, lr}
 800044a:	460e      	mov	r6, r1
 800044c:	4605      	mov	r5, r0
 800044e:	b118      	cbz	r0, 8000458 <_puts_r+0x10>
 8000450:	6983      	ldr	r3, [r0, #24]
 8000452:	b90b      	cbnz	r3, 8000458 <_puts_r+0x10>
 8000454:	f000 fa0c 	bl	8000870 <__sinit>
 8000458:	69ab      	ldr	r3, [r5, #24]
 800045a:	68ac      	ldr	r4, [r5, #8]
 800045c:	b913      	cbnz	r3, 8000464 <_puts_r+0x1c>
 800045e:	4628      	mov	r0, r5
 8000460:	f000 fa06 	bl	8000870 <__sinit>
 8000464:	4b23      	ldr	r3, [pc, #140]	; (80004f4 <_puts_r+0xac>)
 8000466:	429c      	cmp	r4, r3
 8000468:	d117      	bne.n	800049a <_puts_r+0x52>
 800046a:	686c      	ldr	r4, [r5, #4]
 800046c:	89a3      	ldrh	r3, [r4, #12]
 800046e:	071b      	lsls	r3, r3, #28
 8000470:	d51d      	bpl.n	80004ae <_puts_r+0x66>
 8000472:	6923      	ldr	r3, [r4, #16]
 8000474:	b1db      	cbz	r3, 80004ae <_puts_r+0x66>
 8000476:	3e01      	subs	r6, #1
 8000478:	68a3      	ldr	r3, [r4, #8]
 800047a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800047e:	3b01      	subs	r3, #1
 8000480:	60a3      	str	r3, [r4, #8]
 8000482:	b9e9      	cbnz	r1, 80004c0 <_puts_r+0x78>
 8000484:	2b00      	cmp	r3, #0
 8000486:	da2e      	bge.n	80004e6 <_puts_r+0x9e>
 8000488:	4622      	mov	r2, r4
 800048a:	210a      	movs	r1, #10
 800048c:	4628      	mov	r0, r5
 800048e:	f000 f83f 	bl	8000510 <__swbuf_r>
 8000492:	3001      	adds	r0, #1
 8000494:	d011      	beq.n	80004ba <_puts_r+0x72>
 8000496:	200a      	movs	r0, #10
 8000498:	e011      	b.n	80004be <_puts_r+0x76>
 800049a:	4b17      	ldr	r3, [pc, #92]	; (80004f8 <_puts_r+0xb0>)
 800049c:	429c      	cmp	r4, r3
 800049e:	d101      	bne.n	80004a4 <_puts_r+0x5c>
 80004a0:	68ac      	ldr	r4, [r5, #8]
 80004a2:	e7e3      	b.n	800046c <_puts_r+0x24>
 80004a4:	4b15      	ldr	r3, [pc, #84]	; (80004fc <_puts_r+0xb4>)
 80004a6:	429c      	cmp	r4, r3
 80004a8:	bf08      	it	eq
 80004aa:	68ec      	ldreq	r4, [r5, #12]
 80004ac:	e7de      	b.n	800046c <_puts_r+0x24>
 80004ae:	4621      	mov	r1, r4
 80004b0:	4628      	mov	r0, r5
 80004b2:	f000 f87f 	bl	80005b4 <__swsetup_r>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d0dd      	beq.n	8000476 <_puts_r+0x2e>
 80004ba:	f04f 30ff 	mov.w	r0, #4294967295
 80004be:	bd70      	pop	{r4, r5, r6, pc}
 80004c0:	2b00      	cmp	r3, #0
 80004c2:	da04      	bge.n	80004ce <_puts_r+0x86>
 80004c4:	69a2      	ldr	r2, [r4, #24]
 80004c6:	429a      	cmp	r2, r3
 80004c8:	dc06      	bgt.n	80004d8 <_puts_r+0x90>
 80004ca:	290a      	cmp	r1, #10
 80004cc:	d004      	beq.n	80004d8 <_puts_r+0x90>
 80004ce:	6823      	ldr	r3, [r4, #0]
 80004d0:	1c5a      	adds	r2, r3, #1
 80004d2:	6022      	str	r2, [r4, #0]
 80004d4:	7019      	strb	r1, [r3, #0]
 80004d6:	e7cf      	b.n	8000478 <_puts_r+0x30>
 80004d8:	4622      	mov	r2, r4
 80004da:	4628      	mov	r0, r5
 80004dc:	f000 f818 	bl	8000510 <__swbuf_r>
 80004e0:	3001      	adds	r0, #1
 80004e2:	d1c9      	bne.n	8000478 <_puts_r+0x30>
 80004e4:	e7e9      	b.n	80004ba <_puts_r+0x72>
 80004e6:	6823      	ldr	r3, [r4, #0]
 80004e8:	200a      	movs	r0, #10
 80004ea:	1c5a      	adds	r2, r3, #1
 80004ec:	6022      	str	r2, [r4, #0]
 80004ee:	7018      	strb	r0, [r3, #0]
 80004f0:	e7e5      	b.n	80004be <_puts_r+0x76>
 80004f2:	bf00      	nop
 80004f4:	08000d60 	.word	0x08000d60
 80004f8:	08000d80 	.word	0x08000d80
 80004fc:	08000d40 	.word	0x08000d40

08000500 <puts>:
 8000500:	4b02      	ldr	r3, [pc, #8]	; (800050c <puts+0xc>)
 8000502:	4601      	mov	r1, r0
 8000504:	6818      	ldr	r0, [r3, #0]
 8000506:	f7ff bf9f 	b.w	8000448 <_puts_r>
 800050a:	bf00      	nop
 800050c:	20000000 	.word	0x20000000

08000510 <__swbuf_r>:
 8000510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000512:	460e      	mov	r6, r1
 8000514:	4614      	mov	r4, r2
 8000516:	4605      	mov	r5, r0
 8000518:	b118      	cbz	r0, 8000522 <__swbuf_r+0x12>
 800051a:	6983      	ldr	r3, [r0, #24]
 800051c:	b90b      	cbnz	r3, 8000522 <__swbuf_r+0x12>
 800051e:	f000 f9a7 	bl	8000870 <__sinit>
 8000522:	4b21      	ldr	r3, [pc, #132]	; (80005a8 <__swbuf_r+0x98>)
 8000524:	429c      	cmp	r4, r3
 8000526:	d12a      	bne.n	800057e <__swbuf_r+0x6e>
 8000528:	686c      	ldr	r4, [r5, #4]
 800052a:	69a3      	ldr	r3, [r4, #24]
 800052c:	60a3      	str	r3, [r4, #8]
 800052e:	89a3      	ldrh	r3, [r4, #12]
 8000530:	071a      	lsls	r2, r3, #28
 8000532:	d52e      	bpl.n	8000592 <__swbuf_r+0x82>
 8000534:	6923      	ldr	r3, [r4, #16]
 8000536:	b363      	cbz	r3, 8000592 <__swbuf_r+0x82>
 8000538:	6923      	ldr	r3, [r4, #16]
 800053a:	6820      	ldr	r0, [r4, #0]
 800053c:	1ac0      	subs	r0, r0, r3
 800053e:	6963      	ldr	r3, [r4, #20]
 8000540:	b2f6      	uxtb	r6, r6
 8000542:	4283      	cmp	r3, r0
 8000544:	4637      	mov	r7, r6
 8000546:	dc04      	bgt.n	8000552 <__swbuf_r+0x42>
 8000548:	4621      	mov	r1, r4
 800054a:	4628      	mov	r0, r5
 800054c:	f000 f926 	bl	800079c <_fflush_r>
 8000550:	bb28      	cbnz	r0, 800059e <__swbuf_r+0x8e>
 8000552:	68a3      	ldr	r3, [r4, #8]
 8000554:	3b01      	subs	r3, #1
 8000556:	60a3      	str	r3, [r4, #8]
 8000558:	6823      	ldr	r3, [r4, #0]
 800055a:	1c5a      	adds	r2, r3, #1
 800055c:	6022      	str	r2, [r4, #0]
 800055e:	701e      	strb	r6, [r3, #0]
 8000560:	6963      	ldr	r3, [r4, #20]
 8000562:	3001      	adds	r0, #1
 8000564:	4283      	cmp	r3, r0
 8000566:	d004      	beq.n	8000572 <__swbuf_r+0x62>
 8000568:	89a3      	ldrh	r3, [r4, #12]
 800056a:	07db      	lsls	r3, r3, #31
 800056c:	d519      	bpl.n	80005a2 <__swbuf_r+0x92>
 800056e:	2e0a      	cmp	r6, #10
 8000570:	d117      	bne.n	80005a2 <__swbuf_r+0x92>
 8000572:	4621      	mov	r1, r4
 8000574:	4628      	mov	r0, r5
 8000576:	f000 f911 	bl	800079c <_fflush_r>
 800057a:	b190      	cbz	r0, 80005a2 <__swbuf_r+0x92>
 800057c:	e00f      	b.n	800059e <__swbuf_r+0x8e>
 800057e:	4b0b      	ldr	r3, [pc, #44]	; (80005ac <__swbuf_r+0x9c>)
 8000580:	429c      	cmp	r4, r3
 8000582:	d101      	bne.n	8000588 <__swbuf_r+0x78>
 8000584:	68ac      	ldr	r4, [r5, #8]
 8000586:	e7d0      	b.n	800052a <__swbuf_r+0x1a>
 8000588:	4b09      	ldr	r3, [pc, #36]	; (80005b0 <__swbuf_r+0xa0>)
 800058a:	429c      	cmp	r4, r3
 800058c:	bf08      	it	eq
 800058e:	68ec      	ldreq	r4, [r5, #12]
 8000590:	e7cb      	b.n	800052a <__swbuf_r+0x1a>
 8000592:	4621      	mov	r1, r4
 8000594:	4628      	mov	r0, r5
 8000596:	f000 f80d 	bl	80005b4 <__swsetup_r>
 800059a:	2800      	cmp	r0, #0
 800059c:	d0cc      	beq.n	8000538 <__swbuf_r+0x28>
 800059e:	f04f 37ff 	mov.w	r7, #4294967295
 80005a2:	4638      	mov	r0, r7
 80005a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005a6:	bf00      	nop
 80005a8:	08000d60 	.word	0x08000d60
 80005ac:	08000d80 	.word	0x08000d80
 80005b0:	08000d40 	.word	0x08000d40

080005b4 <__swsetup_r>:
 80005b4:	4b32      	ldr	r3, [pc, #200]	; (8000680 <__swsetup_r+0xcc>)
 80005b6:	b570      	push	{r4, r5, r6, lr}
 80005b8:	681d      	ldr	r5, [r3, #0]
 80005ba:	4606      	mov	r6, r0
 80005bc:	460c      	mov	r4, r1
 80005be:	b125      	cbz	r5, 80005ca <__swsetup_r+0x16>
 80005c0:	69ab      	ldr	r3, [r5, #24]
 80005c2:	b913      	cbnz	r3, 80005ca <__swsetup_r+0x16>
 80005c4:	4628      	mov	r0, r5
 80005c6:	f000 f953 	bl	8000870 <__sinit>
 80005ca:	4b2e      	ldr	r3, [pc, #184]	; (8000684 <__swsetup_r+0xd0>)
 80005cc:	429c      	cmp	r4, r3
 80005ce:	d10f      	bne.n	80005f0 <__swsetup_r+0x3c>
 80005d0:	686c      	ldr	r4, [r5, #4]
 80005d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005d6:	b29a      	uxth	r2, r3
 80005d8:	0715      	lsls	r5, r2, #28
 80005da:	d42c      	bmi.n	8000636 <__swsetup_r+0x82>
 80005dc:	06d0      	lsls	r0, r2, #27
 80005de:	d411      	bmi.n	8000604 <__swsetup_r+0x50>
 80005e0:	2209      	movs	r2, #9
 80005e2:	6032      	str	r2, [r6, #0]
 80005e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005e8:	81a3      	strh	r3, [r4, #12]
 80005ea:	f04f 30ff 	mov.w	r0, #4294967295
 80005ee:	e03e      	b.n	800066e <__swsetup_r+0xba>
 80005f0:	4b25      	ldr	r3, [pc, #148]	; (8000688 <__swsetup_r+0xd4>)
 80005f2:	429c      	cmp	r4, r3
 80005f4:	d101      	bne.n	80005fa <__swsetup_r+0x46>
 80005f6:	68ac      	ldr	r4, [r5, #8]
 80005f8:	e7eb      	b.n	80005d2 <__swsetup_r+0x1e>
 80005fa:	4b24      	ldr	r3, [pc, #144]	; (800068c <__swsetup_r+0xd8>)
 80005fc:	429c      	cmp	r4, r3
 80005fe:	bf08      	it	eq
 8000600:	68ec      	ldreq	r4, [r5, #12]
 8000602:	e7e6      	b.n	80005d2 <__swsetup_r+0x1e>
 8000604:	0751      	lsls	r1, r2, #29
 8000606:	d512      	bpl.n	800062e <__swsetup_r+0x7a>
 8000608:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800060a:	b141      	cbz	r1, 800061e <__swsetup_r+0x6a>
 800060c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000610:	4299      	cmp	r1, r3
 8000612:	d002      	beq.n	800061a <__swsetup_r+0x66>
 8000614:	4630      	mov	r0, r6
 8000616:	f000 fa19 	bl	8000a4c <_free_r>
 800061a:	2300      	movs	r3, #0
 800061c:	6363      	str	r3, [r4, #52]	; 0x34
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000624:	81a3      	strh	r3, [r4, #12]
 8000626:	2300      	movs	r3, #0
 8000628:	6063      	str	r3, [r4, #4]
 800062a:	6923      	ldr	r3, [r4, #16]
 800062c:	6023      	str	r3, [r4, #0]
 800062e:	89a3      	ldrh	r3, [r4, #12]
 8000630:	f043 0308 	orr.w	r3, r3, #8
 8000634:	81a3      	strh	r3, [r4, #12]
 8000636:	6923      	ldr	r3, [r4, #16]
 8000638:	b94b      	cbnz	r3, 800064e <__swsetup_r+0x9a>
 800063a:	89a3      	ldrh	r3, [r4, #12]
 800063c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000640:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000644:	d003      	beq.n	800064e <__swsetup_r+0x9a>
 8000646:	4621      	mov	r1, r4
 8000648:	4630      	mov	r0, r6
 800064a:	f000 f9bf 	bl	80009cc <__smakebuf_r>
 800064e:	89a2      	ldrh	r2, [r4, #12]
 8000650:	f012 0301 	ands.w	r3, r2, #1
 8000654:	d00c      	beq.n	8000670 <__swsetup_r+0xbc>
 8000656:	2300      	movs	r3, #0
 8000658:	60a3      	str	r3, [r4, #8]
 800065a:	6963      	ldr	r3, [r4, #20]
 800065c:	425b      	negs	r3, r3
 800065e:	61a3      	str	r3, [r4, #24]
 8000660:	6923      	ldr	r3, [r4, #16]
 8000662:	b953      	cbnz	r3, 800067a <__swsetup_r+0xc6>
 8000664:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000668:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800066c:	d1ba      	bne.n	80005e4 <__swsetup_r+0x30>
 800066e:	bd70      	pop	{r4, r5, r6, pc}
 8000670:	0792      	lsls	r2, r2, #30
 8000672:	bf58      	it	pl
 8000674:	6963      	ldrpl	r3, [r4, #20]
 8000676:	60a3      	str	r3, [r4, #8]
 8000678:	e7f2      	b.n	8000660 <__swsetup_r+0xac>
 800067a:	2000      	movs	r0, #0
 800067c:	e7f7      	b.n	800066e <__swsetup_r+0xba>
 800067e:	bf00      	nop
 8000680:	20000000 	.word	0x20000000
 8000684:	08000d60 	.word	0x08000d60
 8000688:	08000d80 	.word	0x08000d80
 800068c:	08000d40 	.word	0x08000d40

08000690 <__sflush_r>:
 8000690:	898a      	ldrh	r2, [r1, #12]
 8000692:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000696:	4605      	mov	r5, r0
 8000698:	0710      	lsls	r0, r2, #28
 800069a:	460c      	mov	r4, r1
 800069c:	d458      	bmi.n	8000750 <__sflush_r+0xc0>
 800069e:	684b      	ldr	r3, [r1, #4]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	dc05      	bgt.n	80006b0 <__sflush_r+0x20>
 80006a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	dc02      	bgt.n	80006b0 <__sflush_r+0x20>
 80006aa:	2000      	movs	r0, #0
 80006ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006b2:	2e00      	cmp	r6, #0
 80006b4:	d0f9      	beq.n	80006aa <__sflush_r+0x1a>
 80006b6:	2300      	movs	r3, #0
 80006b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006bc:	682f      	ldr	r7, [r5, #0]
 80006be:	6a21      	ldr	r1, [r4, #32]
 80006c0:	602b      	str	r3, [r5, #0]
 80006c2:	d032      	beq.n	800072a <__sflush_r+0x9a>
 80006c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006c6:	89a3      	ldrh	r3, [r4, #12]
 80006c8:	075a      	lsls	r2, r3, #29
 80006ca:	d505      	bpl.n	80006d8 <__sflush_r+0x48>
 80006cc:	6863      	ldr	r3, [r4, #4]
 80006ce:	1ac0      	subs	r0, r0, r3
 80006d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006d2:	b10b      	cbz	r3, 80006d8 <__sflush_r+0x48>
 80006d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006d6:	1ac0      	subs	r0, r0, r3
 80006d8:	2300      	movs	r3, #0
 80006da:	4602      	mov	r2, r0
 80006dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006de:	6a21      	ldr	r1, [r4, #32]
 80006e0:	4628      	mov	r0, r5
 80006e2:	47b0      	blx	r6
 80006e4:	1c43      	adds	r3, r0, #1
 80006e6:	89a3      	ldrh	r3, [r4, #12]
 80006e8:	d106      	bne.n	80006f8 <__sflush_r+0x68>
 80006ea:	6829      	ldr	r1, [r5, #0]
 80006ec:	291d      	cmp	r1, #29
 80006ee:	d848      	bhi.n	8000782 <__sflush_r+0xf2>
 80006f0:	4a29      	ldr	r2, [pc, #164]	; (8000798 <__sflush_r+0x108>)
 80006f2:	40ca      	lsrs	r2, r1
 80006f4:	07d6      	lsls	r6, r2, #31
 80006f6:	d544      	bpl.n	8000782 <__sflush_r+0xf2>
 80006f8:	2200      	movs	r2, #0
 80006fa:	6062      	str	r2, [r4, #4]
 80006fc:	04d9      	lsls	r1, r3, #19
 80006fe:	6922      	ldr	r2, [r4, #16]
 8000700:	6022      	str	r2, [r4, #0]
 8000702:	d504      	bpl.n	800070e <__sflush_r+0x7e>
 8000704:	1c42      	adds	r2, r0, #1
 8000706:	d101      	bne.n	800070c <__sflush_r+0x7c>
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	b903      	cbnz	r3, 800070e <__sflush_r+0x7e>
 800070c:	6560      	str	r0, [r4, #84]	; 0x54
 800070e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000710:	602f      	str	r7, [r5, #0]
 8000712:	2900      	cmp	r1, #0
 8000714:	d0c9      	beq.n	80006aa <__sflush_r+0x1a>
 8000716:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800071a:	4299      	cmp	r1, r3
 800071c:	d002      	beq.n	8000724 <__sflush_r+0x94>
 800071e:	4628      	mov	r0, r5
 8000720:	f000 f994 	bl	8000a4c <_free_r>
 8000724:	2000      	movs	r0, #0
 8000726:	6360      	str	r0, [r4, #52]	; 0x34
 8000728:	e7c0      	b.n	80006ac <__sflush_r+0x1c>
 800072a:	2301      	movs	r3, #1
 800072c:	4628      	mov	r0, r5
 800072e:	47b0      	blx	r6
 8000730:	1c41      	adds	r1, r0, #1
 8000732:	d1c8      	bne.n	80006c6 <__sflush_r+0x36>
 8000734:	682b      	ldr	r3, [r5, #0]
 8000736:	2b00      	cmp	r3, #0
 8000738:	d0c5      	beq.n	80006c6 <__sflush_r+0x36>
 800073a:	2b1d      	cmp	r3, #29
 800073c:	d001      	beq.n	8000742 <__sflush_r+0xb2>
 800073e:	2b16      	cmp	r3, #22
 8000740:	d101      	bne.n	8000746 <__sflush_r+0xb6>
 8000742:	602f      	str	r7, [r5, #0]
 8000744:	e7b1      	b.n	80006aa <__sflush_r+0x1a>
 8000746:	89a3      	ldrh	r3, [r4, #12]
 8000748:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800074c:	81a3      	strh	r3, [r4, #12]
 800074e:	e7ad      	b.n	80006ac <__sflush_r+0x1c>
 8000750:	690f      	ldr	r7, [r1, #16]
 8000752:	2f00      	cmp	r7, #0
 8000754:	d0a9      	beq.n	80006aa <__sflush_r+0x1a>
 8000756:	0793      	lsls	r3, r2, #30
 8000758:	680e      	ldr	r6, [r1, #0]
 800075a:	bf08      	it	eq
 800075c:	694b      	ldreq	r3, [r1, #20]
 800075e:	600f      	str	r7, [r1, #0]
 8000760:	bf18      	it	ne
 8000762:	2300      	movne	r3, #0
 8000764:	eba6 0807 	sub.w	r8, r6, r7
 8000768:	608b      	str	r3, [r1, #8]
 800076a:	f1b8 0f00 	cmp.w	r8, #0
 800076e:	dd9c      	ble.n	80006aa <__sflush_r+0x1a>
 8000770:	4643      	mov	r3, r8
 8000772:	463a      	mov	r2, r7
 8000774:	6a21      	ldr	r1, [r4, #32]
 8000776:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000778:	4628      	mov	r0, r5
 800077a:	47b0      	blx	r6
 800077c:	2800      	cmp	r0, #0
 800077e:	dc06      	bgt.n	800078e <__sflush_r+0xfe>
 8000780:	89a3      	ldrh	r3, [r4, #12]
 8000782:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000786:	81a3      	strh	r3, [r4, #12]
 8000788:	f04f 30ff 	mov.w	r0, #4294967295
 800078c:	e78e      	b.n	80006ac <__sflush_r+0x1c>
 800078e:	4407      	add	r7, r0
 8000790:	eba8 0800 	sub.w	r8, r8, r0
 8000794:	e7e9      	b.n	800076a <__sflush_r+0xda>
 8000796:	bf00      	nop
 8000798:	20400001 	.word	0x20400001

0800079c <_fflush_r>:
 800079c:	b538      	push	{r3, r4, r5, lr}
 800079e:	690b      	ldr	r3, [r1, #16]
 80007a0:	4605      	mov	r5, r0
 80007a2:	460c      	mov	r4, r1
 80007a4:	b1db      	cbz	r3, 80007de <_fflush_r+0x42>
 80007a6:	b118      	cbz	r0, 80007b0 <_fflush_r+0x14>
 80007a8:	6983      	ldr	r3, [r0, #24]
 80007aa:	b90b      	cbnz	r3, 80007b0 <_fflush_r+0x14>
 80007ac:	f000 f860 	bl	8000870 <__sinit>
 80007b0:	4b0c      	ldr	r3, [pc, #48]	; (80007e4 <_fflush_r+0x48>)
 80007b2:	429c      	cmp	r4, r3
 80007b4:	d109      	bne.n	80007ca <_fflush_r+0x2e>
 80007b6:	686c      	ldr	r4, [r5, #4]
 80007b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007bc:	b17b      	cbz	r3, 80007de <_fflush_r+0x42>
 80007be:	4621      	mov	r1, r4
 80007c0:	4628      	mov	r0, r5
 80007c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007c6:	f7ff bf63 	b.w	8000690 <__sflush_r>
 80007ca:	4b07      	ldr	r3, [pc, #28]	; (80007e8 <_fflush_r+0x4c>)
 80007cc:	429c      	cmp	r4, r3
 80007ce:	d101      	bne.n	80007d4 <_fflush_r+0x38>
 80007d0:	68ac      	ldr	r4, [r5, #8]
 80007d2:	e7f1      	b.n	80007b8 <_fflush_r+0x1c>
 80007d4:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_fflush_r+0x50>)
 80007d6:	429c      	cmp	r4, r3
 80007d8:	bf08      	it	eq
 80007da:	68ec      	ldreq	r4, [r5, #12]
 80007dc:	e7ec      	b.n	80007b8 <_fflush_r+0x1c>
 80007de:	2000      	movs	r0, #0
 80007e0:	bd38      	pop	{r3, r4, r5, pc}
 80007e2:	bf00      	nop
 80007e4:	08000d60 	.word	0x08000d60
 80007e8:	08000d80 	.word	0x08000d80
 80007ec:	08000d40 	.word	0x08000d40

080007f0 <std>:
 80007f0:	2300      	movs	r3, #0
 80007f2:	b510      	push	{r4, lr}
 80007f4:	4604      	mov	r4, r0
 80007f6:	e9c0 3300 	strd	r3, r3, [r0]
 80007fa:	6083      	str	r3, [r0, #8]
 80007fc:	8181      	strh	r1, [r0, #12]
 80007fe:	6643      	str	r3, [r0, #100]	; 0x64
 8000800:	81c2      	strh	r2, [r0, #14]
 8000802:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000806:	6183      	str	r3, [r0, #24]
 8000808:	4619      	mov	r1, r3
 800080a:	2208      	movs	r2, #8
 800080c:	305c      	adds	r0, #92	; 0x5c
 800080e:	f7ff fe13 	bl	8000438 <memset>
 8000812:	4b05      	ldr	r3, [pc, #20]	; (8000828 <std+0x38>)
 8000814:	6263      	str	r3, [r4, #36]	; 0x24
 8000816:	4b05      	ldr	r3, [pc, #20]	; (800082c <std+0x3c>)
 8000818:	62a3      	str	r3, [r4, #40]	; 0x28
 800081a:	4b05      	ldr	r3, [pc, #20]	; (8000830 <std+0x40>)
 800081c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800081e:	4b05      	ldr	r3, [pc, #20]	; (8000834 <std+0x44>)
 8000820:	6224      	str	r4, [r4, #32]
 8000822:	6323      	str	r3, [r4, #48]	; 0x30
 8000824:	bd10      	pop	{r4, pc}
 8000826:	bf00      	nop
 8000828:	08000bbd 	.word	0x08000bbd
 800082c:	08000bdf 	.word	0x08000bdf
 8000830:	08000c17 	.word	0x08000c17
 8000834:	08000c3b 	.word	0x08000c3b

08000838 <_cleanup_r>:
 8000838:	4901      	ldr	r1, [pc, #4]	; (8000840 <_cleanup_r+0x8>)
 800083a:	f000 b885 	b.w	8000948 <_fwalk_reent>
 800083e:	bf00      	nop
 8000840:	0800079d 	.word	0x0800079d

08000844 <__sfmoreglue>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	1e4a      	subs	r2, r1, #1
 8000848:	2568      	movs	r5, #104	; 0x68
 800084a:	4355      	muls	r5, r2
 800084c:	460e      	mov	r6, r1
 800084e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000852:	f000 f949 	bl	8000ae8 <_malloc_r>
 8000856:	4604      	mov	r4, r0
 8000858:	b140      	cbz	r0, 800086c <__sfmoreglue+0x28>
 800085a:	2100      	movs	r1, #0
 800085c:	e9c0 1600 	strd	r1, r6, [r0]
 8000860:	300c      	adds	r0, #12
 8000862:	60a0      	str	r0, [r4, #8]
 8000864:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000868:	f7ff fde6 	bl	8000438 <memset>
 800086c:	4620      	mov	r0, r4
 800086e:	bd70      	pop	{r4, r5, r6, pc}

08000870 <__sinit>:
 8000870:	6983      	ldr	r3, [r0, #24]
 8000872:	b510      	push	{r4, lr}
 8000874:	4604      	mov	r4, r0
 8000876:	bb33      	cbnz	r3, 80008c6 <__sinit+0x56>
 8000878:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800087c:	6503      	str	r3, [r0, #80]	; 0x50
 800087e:	4b12      	ldr	r3, [pc, #72]	; (80008c8 <__sinit+0x58>)
 8000880:	4a12      	ldr	r2, [pc, #72]	; (80008cc <__sinit+0x5c>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	6282      	str	r2, [r0, #40]	; 0x28
 8000886:	4298      	cmp	r0, r3
 8000888:	bf04      	itt	eq
 800088a:	2301      	moveq	r3, #1
 800088c:	6183      	streq	r3, [r0, #24]
 800088e:	f000 f81f 	bl	80008d0 <__sfp>
 8000892:	6060      	str	r0, [r4, #4]
 8000894:	4620      	mov	r0, r4
 8000896:	f000 f81b 	bl	80008d0 <__sfp>
 800089a:	60a0      	str	r0, [r4, #8]
 800089c:	4620      	mov	r0, r4
 800089e:	f000 f817 	bl	80008d0 <__sfp>
 80008a2:	2200      	movs	r2, #0
 80008a4:	60e0      	str	r0, [r4, #12]
 80008a6:	2104      	movs	r1, #4
 80008a8:	6860      	ldr	r0, [r4, #4]
 80008aa:	f7ff ffa1 	bl	80007f0 <std>
 80008ae:	2201      	movs	r2, #1
 80008b0:	2109      	movs	r1, #9
 80008b2:	68a0      	ldr	r0, [r4, #8]
 80008b4:	f7ff ff9c 	bl	80007f0 <std>
 80008b8:	2202      	movs	r2, #2
 80008ba:	2112      	movs	r1, #18
 80008bc:	68e0      	ldr	r0, [r4, #12]
 80008be:	f7ff ff97 	bl	80007f0 <std>
 80008c2:	2301      	movs	r3, #1
 80008c4:	61a3      	str	r3, [r4, #24]
 80008c6:	bd10      	pop	{r4, pc}
 80008c8:	08000d3c 	.word	0x08000d3c
 80008cc:	08000839 	.word	0x08000839

080008d0 <__sfp>:
 80008d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008d2:	4b1b      	ldr	r3, [pc, #108]	; (8000940 <__sfp+0x70>)
 80008d4:	681e      	ldr	r6, [r3, #0]
 80008d6:	69b3      	ldr	r3, [r6, #24]
 80008d8:	4607      	mov	r7, r0
 80008da:	b913      	cbnz	r3, 80008e2 <__sfp+0x12>
 80008dc:	4630      	mov	r0, r6
 80008de:	f7ff ffc7 	bl	8000870 <__sinit>
 80008e2:	3648      	adds	r6, #72	; 0x48
 80008e4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008e8:	3b01      	subs	r3, #1
 80008ea:	d503      	bpl.n	80008f4 <__sfp+0x24>
 80008ec:	6833      	ldr	r3, [r6, #0]
 80008ee:	b133      	cbz	r3, 80008fe <__sfp+0x2e>
 80008f0:	6836      	ldr	r6, [r6, #0]
 80008f2:	e7f7      	b.n	80008e4 <__sfp+0x14>
 80008f4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008f8:	b16d      	cbz	r5, 8000916 <__sfp+0x46>
 80008fa:	3468      	adds	r4, #104	; 0x68
 80008fc:	e7f4      	b.n	80008e8 <__sfp+0x18>
 80008fe:	2104      	movs	r1, #4
 8000900:	4638      	mov	r0, r7
 8000902:	f7ff ff9f 	bl	8000844 <__sfmoreglue>
 8000906:	6030      	str	r0, [r6, #0]
 8000908:	2800      	cmp	r0, #0
 800090a:	d1f1      	bne.n	80008f0 <__sfp+0x20>
 800090c:	230c      	movs	r3, #12
 800090e:	603b      	str	r3, [r7, #0]
 8000910:	4604      	mov	r4, r0
 8000912:	4620      	mov	r0, r4
 8000914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000916:	4b0b      	ldr	r3, [pc, #44]	; (8000944 <__sfp+0x74>)
 8000918:	6665      	str	r5, [r4, #100]	; 0x64
 800091a:	e9c4 5500 	strd	r5, r5, [r4]
 800091e:	60a5      	str	r5, [r4, #8]
 8000920:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000924:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000928:	2208      	movs	r2, #8
 800092a:	4629      	mov	r1, r5
 800092c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000930:	f7ff fd82 	bl	8000438 <memset>
 8000934:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000938:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800093c:	e7e9      	b.n	8000912 <__sfp+0x42>
 800093e:	bf00      	nop
 8000940:	08000d3c 	.word	0x08000d3c
 8000944:	ffff0001 	.word	0xffff0001

08000948 <_fwalk_reent>:
 8000948:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800094c:	4680      	mov	r8, r0
 800094e:	4689      	mov	r9, r1
 8000950:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000954:	2600      	movs	r6, #0
 8000956:	b914      	cbnz	r4, 800095e <_fwalk_reent+0x16>
 8000958:	4630      	mov	r0, r6
 800095a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800095e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000962:	3f01      	subs	r7, #1
 8000964:	d501      	bpl.n	800096a <_fwalk_reent+0x22>
 8000966:	6824      	ldr	r4, [r4, #0]
 8000968:	e7f5      	b.n	8000956 <_fwalk_reent+0xe>
 800096a:	89ab      	ldrh	r3, [r5, #12]
 800096c:	2b01      	cmp	r3, #1
 800096e:	d907      	bls.n	8000980 <_fwalk_reent+0x38>
 8000970:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000974:	3301      	adds	r3, #1
 8000976:	d003      	beq.n	8000980 <_fwalk_reent+0x38>
 8000978:	4629      	mov	r1, r5
 800097a:	4640      	mov	r0, r8
 800097c:	47c8      	blx	r9
 800097e:	4306      	orrs	r6, r0
 8000980:	3568      	adds	r5, #104	; 0x68
 8000982:	e7ee      	b.n	8000962 <_fwalk_reent+0x1a>

08000984 <__swhatbuf_r>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	460e      	mov	r6, r1
 8000988:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800098c:	2900      	cmp	r1, #0
 800098e:	b096      	sub	sp, #88	; 0x58
 8000990:	4614      	mov	r4, r2
 8000992:	461d      	mov	r5, r3
 8000994:	da07      	bge.n	80009a6 <__swhatbuf_r+0x22>
 8000996:	2300      	movs	r3, #0
 8000998:	602b      	str	r3, [r5, #0]
 800099a:	89b3      	ldrh	r3, [r6, #12]
 800099c:	061a      	lsls	r2, r3, #24
 800099e:	d410      	bmi.n	80009c2 <__swhatbuf_r+0x3e>
 80009a0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009a4:	e00e      	b.n	80009c4 <__swhatbuf_r+0x40>
 80009a6:	466a      	mov	r2, sp
 80009a8:	f000 f96e 	bl	8000c88 <_fstat_r>
 80009ac:	2800      	cmp	r0, #0
 80009ae:	dbf2      	blt.n	8000996 <__swhatbuf_r+0x12>
 80009b0:	9a01      	ldr	r2, [sp, #4]
 80009b2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009b6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009ba:	425a      	negs	r2, r3
 80009bc:	415a      	adcs	r2, r3
 80009be:	602a      	str	r2, [r5, #0]
 80009c0:	e7ee      	b.n	80009a0 <__swhatbuf_r+0x1c>
 80009c2:	2340      	movs	r3, #64	; 0x40
 80009c4:	2000      	movs	r0, #0
 80009c6:	6023      	str	r3, [r4, #0]
 80009c8:	b016      	add	sp, #88	; 0x58
 80009ca:	bd70      	pop	{r4, r5, r6, pc}

080009cc <__smakebuf_r>:
 80009cc:	898b      	ldrh	r3, [r1, #12]
 80009ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009d0:	079d      	lsls	r5, r3, #30
 80009d2:	4606      	mov	r6, r0
 80009d4:	460c      	mov	r4, r1
 80009d6:	d507      	bpl.n	80009e8 <__smakebuf_r+0x1c>
 80009d8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009dc:	6023      	str	r3, [r4, #0]
 80009de:	6123      	str	r3, [r4, #16]
 80009e0:	2301      	movs	r3, #1
 80009e2:	6163      	str	r3, [r4, #20]
 80009e4:	b002      	add	sp, #8
 80009e6:	bd70      	pop	{r4, r5, r6, pc}
 80009e8:	ab01      	add	r3, sp, #4
 80009ea:	466a      	mov	r2, sp
 80009ec:	f7ff ffca 	bl	8000984 <__swhatbuf_r>
 80009f0:	9900      	ldr	r1, [sp, #0]
 80009f2:	4605      	mov	r5, r0
 80009f4:	4630      	mov	r0, r6
 80009f6:	f000 f877 	bl	8000ae8 <_malloc_r>
 80009fa:	b948      	cbnz	r0, 8000a10 <__smakebuf_r+0x44>
 80009fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a00:	059a      	lsls	r2, r3, #22
 8000a02:	d4ef      	bmi.n	80009e4 <__smakebuf_r+0x18>
 8000a04:	f023 0303 	bic.w	r3, r3, #3
 8000a08:	f043 0302 	orr.w	r3, r3, #2
 8000a0c:	81a3      	strh	r3, [r4, #12]
 8000a0e:	e7e3      	b.n	80009d8 <__smakebuf_r+0xc>
 8000a10:	4b0d      	ldr	r3, [pc, #52]	; (8000a48 <__smakebuf_r+0x7c>)
 8000a12:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a14:	89a3      	ldrh	r3, [r4, #12]
 8000a16:	6020      	str	r0, [r4, #0]
 8000a18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a1c:	81a3      	strh	r3, [r4, #12]
 8000a1e:	9b00      	ldr	r3, [sp, #0]
 8000a20:	6163      	str	r3, [r4, #20]
 8000a22:	9b01      	ldr	r3, [sp, #4]
 8000a24:	6120      	str	r0, [r4, #16]
 8000a26:	b15b      	cbz	r3, 8000a40 <__smakebuf_r+0x74>
 8000a28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	f000 f93d 	bl	8000cac <_isatty_r>
 8000a32:	b128      	cbz	r0, 8000a40 <__smakebuf_r+0x74>
 8000a34:	89a3      	ldrh	r3, [r4, #12]
 8000a36:	f023 0303 	bic.w	r3, r3, #3
 8000a3a:	f043 0301 	orr.w	r3, r3, #1
 8000a3e:	81a3      	strh	r3, [r4, #12]
 8000a40:	89a3      	ldrh	r3, [r4, #12]
 8000a42:	431d      	orrs	r5, r3
 8000a44:	81a5      	strh	r5, [r4, #12]
 8000a46:	e7cd      	b.n	80009e4 <__smakebuf_r+0x18>
 8000a48:	08000839 	.word	0x08000839

08000a4c <_free_r>:
 8000a4c:	b538      	push	{r3, r4, r5, lr}
 8000a4e:	4605      	mov	r5, r0
 8000a50:	2900      	cmp	r1, #0
 8000a52:	d045      	beq.n	8000ae0 <_free_r+0x94>
 8000a54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a58:	1f0c      	subs	r4, r1, #4
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	bfb8      	it	lt
 8000a5e:	18e4      	addlt	r4, r4, r3
 8000a60:	f000 f946 	bl	8000cf0 <__malloc_lock>
 8000a64:	4a1f      	ldr	r2, [pc, #124]	; (8000ae4 <_free_r+0x98>)
 8000a66:	6813      	ldr	r3, [r2, #0]
 8000a68:	4610      	mov	r0, r2
 8000a6a:	b933      	cbnz	r3, 8000a7a <_free_r+0x2e>
 8000a6c:	6063      	str	r3, [r4, #4]
 8000a6e:	6014      	str	r4, [r2, #0]
 8000a70:	4628      	mov	r0, r5
 8000a72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a76:	f000 b93c 	b.w	8000cf2 <__malloc_unlock>
 8000a7a:	42a3      	cmp	r3, r4
 8000a7c:	d90c      	bls.n	8000a98 <_free_r+0x4c>
 8000a7e:	6821      	ldr	r1, [r4, #0]
 8000a80:	1862      	adds	r2, r4, r1
 8000a82:	4293      	cmp	r3, r2
 8000a84:	bf04      	itt	eq
 8000a86:	681a      	ldreq	r2, [r3, #0]
 8000a88:	685b      	ldreq	r3, [r3, #4]
 8000a8a:	6063      	str	r3, [r4, #4]
 8000a8c:	bf04      	itt	eq
 8000a8e:	1852      	addeq	r2, r2, r1
 8000a90:	6022      	streq	r2, [r4, #0]
 8000a92:	6004      	str	r4, [r0, #0]
 8000a94:	e7ec      	b.n	8000a70 <_free_r+0x24>
 8000a96:	4613      	mov	r3, r2
 8000a98:	685a      	ldr	r2, [r3, #4]
 8000a9a:	b10a      	cbz	r2, 8000aa0 <_free_r+0x54>
 8000a9c:	42a2      	cmp	r2, r4
 8000a9e:	d9fa      	bls.n	8000a96 <_free_r+0x4a>
 8000aa0:	6819      	ldr	r1, [r3, #0]
 8000aa2:	1858      	adds	r0, r3, r1
 8000aa4:	42a0      	cmp	r0, r4
 8000aa6:	d10b      	bne.n	8000ac0 <_free_r+0x74>
 8000aa8:	6820      	ldr	r0, [r4, #0]
 8000aaa:	4401      	add	r1, r0
 8000aac:	1858      	adds	r0, r3, r1
 8000aae:	4282      	cmp	r2, r0
 8000ab0:	6019      	str	r1, [r3, #0]
 8000ab2:	d1dd      	bne.n	8000a70 <_free_r+0x24>
 8000ab4:	6810      	ldr	r0, [r2, #0]
 8000ab6:	6852      	ldr	r2, [r2, #4]
 8000ab8:	605a      	str	r2, [r3, #4]
 8000aba:	4401      	add	r1, r0
 8000abc:	6019      	str	r1, [r3, #0]
 8000abe:	e7d7      	b.n	8000a70 <_free_r+0x24>
 8000ac0:	d902      	bls.n	8000ac8 <_free_r+0x7c>
 8000ac2:	230c      	movs	r3, #12
 8000ac4:	602b      	str	r3, [r5, #0]
 8000ac6:	e7d3      	b.n	8000a70 <_free_r+0x24>
 8000ac8:	6820      	ldr	r0, [r4, #0]
 8000aca:	1821      	adds	r1, r4, r0
 8000acc:	428a      	cmp	r2, r1
 8000ace:	bf04      	itt	eq
 8000ad0:	6811      	ldreq	r1, [r2, #0]
 8000ad2:	6852      	ldreq	r2, [r2, #4]
 8000ad4:	6062      	str	r2, [r4, #4]
 8000ad6:	bf04      	itt	eq
 8000ad8:	1809      	addeq	r1, r1, r0
 8000ada:	6021      	streq	r1, [r4, #0]
 8000adc:	605c      	str	r4, [r3, #4]
 8000ade:	e7c7      	b.n	8000a70 <_free_r+0x24>
 8000ae0:	bd38      	pop	{r3, r4, r5, pc}
 8000ae2:	bf00      	nop
 8000ae4:	20000084 	.word	0x20000084

08000ae8 <_malloc_r>:
 8000ae8:	b570      	push	{r4, r5, r6, lr}
 8000aea:	1ccd      	adds	r5, r1, #3
 8000aec:	f025 0503 	bic.w	r5, r5, #3
 8000af0:	3508      	adds	r5, #8
 8000af2:	2d0c      	cmp	r5, #12
 8000af4:	bf38      	it	cc
 8000af6:	250c      	movcc	r5, #12
 8000af8:	2d00      	cmp	r5, #0
 8000afa:	4606      	mov	r6, r0
 8000afc:	db01      	blt.n	8000b02 <_malloc_r+0x1a>
 8000afe:	42a9      	cmp	r1, r5
 8000b00:	d903      	bls.n	8000b0a <_malloc_r+0x22>
 8000b02:	230c      	movs	r3, #12
 8000b04:	6033      	str	r3, [r6, #0]
 8000b06:	2000      	movs	r0, #0
 8000b08:	bd70      	pop	{r4, r5, r6, pc}
 8000b0a:	f000 f8f1 	bl	8000cf0 <__malloc_lock>
 8000b0e:	4a21      	ldr	r2, [pc, #132]	; (8000b94 <_malloc_r+0xac>)
 8000b10:	6814      	ldr	r4, [r2, #0]
 8000b12:	4621      	mov	r1, r4
 8000b14:	b991      	cbnz	r1, 8000b3c <_malloc_r+0x54>
 8000b16:	4c20      	ldr	r4, [pc, #128]	; (8000b98 <_malloc_r+0xb0>)
 8000b18:	6823      	ldr	r3, [r4, #0]
 8000b1a:	b91b      	cbnz	r3, 8000b24 <_malloc_r+0x3c>
 8000b1c:	4630      	mov	r0, r6
 8000b1e:	f000 f83d 	bl	8000b9c <_sbrk_r>
 8000b22:	6020      	str	r0, [r4, #0]
 8000b24:	4629      	mov	r1, r5
 8000b26:	4630      	mov	r0, r6
 8000b28:	f000 f838 	bl	8000b9c <_sbrk_r>
 8000b2c:	1c43      	adds	r3, r0, #1
 8000b2e:	d124      	bne.n	8000b7a <_malloc_r+0x92>
 8000b30:	230c      	movs	r3, #12
 8000b32:	6033      	str	r3, [r6, #0]
 8000b34:	4630      	mov	r0, r6
 8000b36:	f000 f8dc 	bl	8000cf2 <__malloc_unlock>
 8000b3a:	e7e4      	b.n	8000b06 <_malloc_r+0x1e>
 8000b3c:	680b      	ldr	r3, [r1, #0]
 8000b3e:	1b5b      	subs	r3, r3, r5
 8000b40:	d418      	bmi.n	8000b74 <_malloc_r+0x8c>
 8000b42:	2b0b      	cmp	r3, #11
 8000b44:	d90f      	bls.n	8000b66 <_malloc_r+0x7e>
 8000b46:	600b      	str	r3, [r1, #0]
 8000b48:	50cd      	str	r5, [r1, r3]
 8000b4a:	18cc      	adds	r4, r1, r3
 8000b4c:	4630      	mov	r0, r6
 8000b4e:	f000 f8d0 	bl	8000cf2 <__malloc_unlock>
 8000b52:	f104 000b 	add.w	r0, r4, #11
 8000b56:	1d23      	adds	r3, r4, #4
 8000b58:	f020 0007 	bic.w	r0, r0, #7
 8000b5c:	1ac3      	subs	r3, r0, r3
 8000b5e:	d0d3      	beq.n	8000b08 <_malloc_r+0x20>
 8000b60:	425a      	negs	r2, r3
 8000b62:	50e2      	str	r2, [r4, r3]
 8000b64:	e7d0      	b.n	8000b08 <_malloc_r+0x20>
 8000b66:	428c      	cmp	r4, r1
 8000b68:	684b      	ldr	r3, [r1, #4]
 8000b6a:	bf16      	itet	ne
 8000b6c:	6063      	strne	r3, [r4, #4]
 8000b6e:	6013      	streq	r3, [r2, #0]
 8000b70:	460c      	movne	r4, r1
 8000b72:	e7eb      	b.n	8000b4c <_malloc_r+0x64>
 8000b74:	460c      	mov	r4, r1
 8000b76:	6849      	ldr	r1, [r1, #4]
 8000b78:	e7cc      	b.n	8000b14 <_malloc_r+0x2c>
 8000b7a:	1cc4      	adds	r4, r0, #3
 8000b7c:	f024 0403 	bic.w	r4, r4, #3
 8000b80:	42a0      	cmp	r0, r4
 8000b82:	d005      	beq.n	8000b90 <_malloc_r+0xa8>
 8000b84:	1a21      	subs	r1, r4, r0
 8000b86:	4630      	mov	r0, r6
 8000b88:	f000 f808 	bl	8000b9c <_sbrk_r>
 8000b8c:	3001      	adds	r0, #1
 8000b8e:	d0cf      	beq.n	8000b30 <_malloc_r+0x48>
 8000b90:	6025      	str	r5, [r4, #0]
 8000b92:	e7db      	b.n	8000b4c <_malloc_r+0x64>
 8000b94:	20000084 	.word	0x20000084
 8000b98:	20000088 	.word	0x20000088

08000b9c <_sbrk_r>:
 8000b9c:	b538      	push	{r3, r4, r5, lr}
 8000b9e:	4c06      	ldr	r4, [pc, #24]	; (8000bb8 <_sbrk_r+0x1c>)
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	4605      	mov	r5, r0
 8000ba4:	4608      	mov	r0, r1
 8000ba6:	6023      	str	r3, [r4, #0]
 8000ba8:	f7ff fbbc 	bl	8000324 <_sbrk>
 8000bac:	1c43      	adds	r3, r0, #1
 8000bae:	d102      	bne.n	8000bb6 <_sbrk_r+0x1a>
 8000bb0:	6823      	ldr	r3, [r4, #0]
 8000bb2:	b103      	cbz	r3, 8000bb6 <_sbrk_r+0x1a>
 8000bb4:	602b      	str	r3, [r5, #0]
 8000bb6:	bd38      	pop	{r3, r4, r5, pc}
 8000bb8:	2000008c 	.word	0x2000008c

08000bbc <__sread>:
 8000bbc:	b510      	push	{r4, lr}
 8000bbe:	460c      	mov	r4, r1
 8000bc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bc4:	f000 f896 	bl	8000cf4 <_read_r>
 8000bc8:	2800      	cmp	r0, #0
 8000bca:	bfab      	itete	ge
 8000bcc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bce:	89a3      	ldrhlt	r3, [r4, #12]
 8000bd0:	181b      	addge	r3, r3, r0
 8000bd2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bd6:	bfac      	ite	ge
 8000bd8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bda:	81a3      	strhlt	r3, [r4, #12]
 8000bdc:	bd10      	pop	{r4, pc}

08000bde <__swrite>:
 8000bde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000be2:	461f      	mov	r7, r3
 8000be4:	898b      	ldrh	r3, [r1, #12]
 8000be6:	05db      	lsls	r3, r3, #23
 8000be8:	4605      	mov	r5, r0
 8000bea:	460c      	mov	r4, r1
 8000bec:	4616      	mov	r6, r2
 8000bee:	d505      	bpl.n	8000bfc <__swrite+0x1e>
 8000bf0:	2302      	movs	r3, #2
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bf8:	f000 f868 	bl	8000ccc <_lseek_r>
 8000bfc:	89a3      	ldrh	r3, [r4, #12]
 8000bfe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c02:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c06:	81a3      	strh	r3, [r4, #12]
 8000c08:	4632      	mov	r2, r6
 8000c0a:	463b      	mov	r3, r7
 8000c0c:	4628      	mov	r0, r5
 8000c0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c12:	f000 b817 	b.w	8000c44 <_write_r>

08000c16 <__sseek>:
 8000c16:	b510      	push	{r4, lr}
 8000c18:	460c      	mov	r4, r1
 8000c1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c1e:	f000 f855 	bl	8000ccc <_lseek_r>
 8000c22:	1c43      	adds	r3, r0, #1
 8000c24:	89a3      	ldrh	r3, [r4, #12]
 8000c26:	bf15      	itete	ne
 8000c28:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c2a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c2e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c32:	81a3      	strheq	r3, [r4, #12]
 8000c34:	bf18      	it	ne
 8000c36:	81a3      	strhne	r3, [r4, #12]
 8000c38:	bd10      	pop	{r4, pc}

08000c3a <__sclose>:
 8000c3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c3e:	f000 b813 	b.w	8000c68 <_close_r>
	...

08000c44 <_write_r>:
 8000c44:	b538      	push	{r3, r4, r5, lr}
 8000c46:	4c07      	ldr	r4, [pc, #28]	; (8000c64 <_write_r+0x20>)
 8000c48:	4605      	mov	r5, r0
 8000c4a:	4608      	mov	r0, r1
 8000c4c:	4611      	mov	r1, r2
 8000c4e:	2200      	movs	r2, #0
 8000c50:	6022      	str	r2, [r4, #0]
 8000c52:	461a      	mov	r2, r3
 8000c54:	f7ff fb15 	bl	8000282 <_write>
 8000c58:	1c43      	adds	r3, r0, #1
 8000c5a:	d102      	bne.n	8000c62 <_write_r+0x1e>
 8000c5c:	6823      	ldr	r3, [r4, #0]
 8000c5e:	b103      	cbz	r3, 8000c62 <_write_r+0x1e>
 8000c60:	602b      	str	r3, [r5, #0]
 8000c62:	bd38      	pop	{r3, r4, r5, pc}
 8000c64:	2000008c 	.word	0x2000008c

08000c68 <_close_r>:
 8000c68:	b538      	push	{r3, r4, r5, lr}
 8000c6a:	4c06      	ldr	r4, [pc, #24]	; (8000c84 <_close_r+0x1c>)
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4605      	mov	r5, r0
 8000c70:	4608      	mov	r0, r1
 8000c72:	6023      	str	r3, [r4, #0]
 8000c74:	f7ff fb21 	bl	80002ba <_close>
 8000c78:	1c43      	adds	r3, r0, #1
 8000c7a:	d102      	bne.n	8000c82 <_close_r+0x1a>
 8000c7c:	6823      	ldr	r3, [r4, #0]
 8000c7e:	b103      	cbz	r3, 8000c82 <_close_r+0x1a>
 8000c80:	602b      	str	r3, [r5, #0]
 8000c82:	bd38      	pop	{r3, r4, r5, pc}
 8000c84:	2000008c 	.word	0x2000008c

08000c88 <_fstat_r>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	4c07      	ldr	r4, [pc, #28]	; (8000ca8 <_fstat_r+0x20>)
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4605      	mov	r5, r0
 8000c90:	4608      	mov	r0, r1
 8000c92:	4611      	mov	r1, r2
 8000c94:	6023      	str	r3, [r4, #0]
 8000c96:	f7ff fb1c 	bl	80002d2 <_fstat>
 8000c9a:	1c43      	adds	r3, r0, #1
 8000c9c:	d102      	bne.n	8000ca4 <_fstat_r+0x1c>
 8000c9e:	6823      	ldr	r3, [r4, #0]
 8000ca0:	b103      	cbz	r3, 8000ca4 <_fstat_r+0x1c>
 8000ca2:	602b      	str	r3, [r5, #0]
 8000ca4:	bd38      	pop	{r3, r4, r5, pc}
 8000ca6:	bf00      	nop
 8000ca8:	2000008c 	.word	0x2000008c

08000cac <_isatty_r>:
 8000cac:	b538      	push	{r3, r4, r5, lr}
 8000cae:	4c06      	ldr	r4, [pc, #24]	; (8000cc8 <_isatty_r+0x1c>)
 8000cb0:	2300      	movs	r3, #0
 8000cb2:	4605      	mov	r5, r0
 8000cb4:	4608      	mov	r0, r1
 8000cb6:	6023      	str	r3, [r4, #0]
 8000cb8:	f7ff fb1b 	bl	80002f2 <_isatty>
 8000cbc:	1c43      	adds	r3, r0, #1
 8000cbe:	d102      	bne.n	8000cc6 <_isatty_r+0x1a>
 8000cc0:	6823      	ldr	r3, [r4, #0]
 8000cc2:	b103      	cbz	r3, 8000cc6 <_isatty_r+0x1a>
 8000cc4:	602b      	str	r3, [r5, #0]
 8000cc6:	bd38      	pop	{r3, r4, r5, pc}
 8000cc8:	2000008c 	.word	0x2000008c

08000ccc <_lseek_r>:
 8000ccc:	b538      	push	{r3, r4, r5, lr}
 8000cce:	4c07      	ldr	r4, [pc, #28]	; (8000cec <_lseek_r+0x20>)
 8000cd0:	4605      	mov	r5, r0
 8000cd2:	4608      	mov	r0, r1
 8000cd4:	4611      	mov	r1, r2
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	6022      	str	r2, [r4, #0]
 8000cda:	461a      	mov	r2, r3
 8000cdc:	f7ff fb14 	bl	8000308 <_lseek>
 8000ce0:	1c43      	adds	r3, r0, #1
 8000ce2:	d102      	bne.n	8000cea <_lseek_r+0x1e>
 8000ce4:	6823      	ldr	r3, [r4, #0]
 8000ce6:	b103      	cbz	r3, 8000cea <_lseek_r+0x1e>
 8000ce8:	602b      	str	r3, [r5, #0]
 8000cea:	bd38      	pop	{r3, r4, r5, pc}
 8000cec:	2000008c 	.word	0x2000008c

08000cf0 <__malloc_lock>:
 8000cf0:	4770      	bx	lr

08000cf2 <__malloc_unlock>:
 8000cf2:	4770      	bx	lr

08000cf4 <_read_r>:
 8000cf4:	b538      	push	{r3, r4, r5, lr}
 8000cf6:	4c07      	ldr	r4, [pc, #28]	; (8000d14 <_read_r+0x20>)
 8000cf8:	4605      	mov	r5, r0
 8000cfa:	4608      	mov	r0, r1
 8000cfc:	4611      	mov	r1, r2
 8000cfe:	2200      	movs	r2, #0
 8000d00:	6022      	str	r2, [r4, #0]
 8000d02:	461a      	mov	r2, r3
 8000d04:	f7ff faa0 	bl	8000248 <_read>
 8000d08:	1c43      	adds	r3, r0, #1
 8000d0a:	d102      	bne.n	8000d12 <_read_r+0x1e>
 8000d0c:	6823      	ldr	r3, [r4, #0]
 8000d0e:	b103      	cbz	r3, 8000d12 <_read_r+0x1e>
 8000d10:	602b      	str	r3, [r5, #0]
 8000d12:	bd38      	pop	{r3, r4, r5, pc}
 8000d14:	2000008c 	.word	0x2000008c

08000d18 <_init>:
 8000d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1a:	bf00      	nop
 8000d1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d1e:	bc08      	pop	{r3}
 8000d20:	469e      	mov	lr, r3
 8000d22:	4770      	bx	lr

08000d24 <_fini>:
 8000d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d26:	bf00      	nop
 8000d28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d2a:	bc08      	pop	{r3}
 8000d2c:	469e      	mov	lr, r3
 8000d2e:	4770      	bx	lr
